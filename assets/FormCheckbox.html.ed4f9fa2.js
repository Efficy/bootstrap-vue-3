import{_ as N,f as P,g as d,h as I,r as f,o as m,c as g,b as n,w as t,a,F as x,d as u,e as p,t as k,i as z,u as q,p as D}from"./app.6ad554c2.js";const L=u(`<h1 id="form-checkbox" tabindex="-1"><a class="header-anchor" href="#form-checkbox" aria-hidden="true">#</a> Form Checkbox</h1><p>For cross browser consistency, <code>&lt;b-form-checkbox-group&gt;</code> and <code>&lt;b-form-checkbox&gt;</code> use Bootstrap&#39;s custom checkbox input to replace the browser default checkbox input. It is built on top of semantic and accessible markup, so it is a solid replacement for the default checkbox input.</p><h2 id="checkbox-group-options-array" tabindex="-1"><a class="header-anchor" href="#checkbox-group-options-array" aria-hidden="true">#</a> Checkbox group options array</h2><p><code>options</code> can be an array of strings or objects. Available fields:</p><ul><li><code>value</code> The selected value which will be set on <code>v-model</code></li><li><code>disabled</code> Disables item for selection</li><li><code>text</code> Display text, or html Display basic inline html</li></ul><p><code>value</code> can be a string, number, or simple object. Avoid using complex types in values.</p><p>If both <code>html</code> and <code>text</code> are provided, <code>html</code> will take precedence. Only basic/native HTML is supported in the <code>html</code> field (components will not work). Note that not all browsers will render inline html (i.e. <code>&lt;i&gt;</code>, <code>&lt;strong&gt;</code>, etc.) inside <code>&lt;option&gt;</code> elements of a <code>&lt;select&gt;</code>.</p><p class="alert alert-danger"><strong>Be cautious</strong> of placing user supplied content in the <code>html</code> field, as it may make you vulnerable to <a class="alert-link" href="https://en.wikipedia.org/wiki/Cross-site_scripting"><abbr title="Cross Site Scripting Attacks">XSS attacks</abbr></a>, if you do not first <a class="alert-link" href="https://en.wikipedia.org/wiki/HTML_sanitization">sanitize</a> the user supplied string. </p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> options <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;A&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;B&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;C&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&#39;D&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token literal-property property">d</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token literal-property property">disabled</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&#39;E&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;F&#39;</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>If an array entry is a string, it will be used for both the generated <code>value</code> and <code>text</code> fields.</p><p>You can mix using strings and <a href="#options-as-an-array-of-objects">objects</a> in the array.</p><p>Internally, BootstrapVue will convert the above array to the following array (the <a href="#options-as-an-array-of-objects">array of objects</a>) format:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> options <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span><span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&#39;A&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&#39;A&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">disabled</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span><span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&#39;B&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&#39;B&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">disabled</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span><span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&#39;C&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&#39;C&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">disabled</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span><span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&#39;D&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token literal-property property">d</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token literal-property property">disabled</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span><span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&#39;E&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&#39;E&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">disabled</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span><span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&#39;F&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&#39;F&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">disabled</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="options-as-an-array-of-objects" tabindex="-1"><a class="header-anchor" href="#options-as-an-array-of-objects" aria-hidden="true">#</a> Options as an array of objects</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> options <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span><span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&#39;Item 1&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&#39;first&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span><span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&#39;Item 2&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&#39;second&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span><span class="token literal-property property">html</span><span class="token operator">:</span> <span class="token string">&#39;&lt;b&gt;Item&lt;/b&gt; 3&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&#39;third&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">disabled</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span><span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&#39;Item 4&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span><span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&#39;Item 5&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token literal-property property">foo</span><span class="token operator">:</span> <span class="token string">&#39;bar&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">baz</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>If <code>value</code> is missing, then <code>text</code> will be used as both the <code>value</code> and <code>text</code> fields. If you use the <code>html</code> property, you <strong>must</strong> supply a <code>value</code> property.</p><p>Internally, BootstrapVue will convert the above array to the following array (the <a href="#options-as-an-array-of-objects">array of objects</a>) format:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> options <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span><span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&#39;Item 1&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&#39;first&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">disabled</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span><span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&#39;Item 2&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&#39;second&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">disabled</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span><span class="token literal-property property">html</span><span class="token operator">:</span> <span class="token string">&#39;&lt;b&gt;Item&lt;/b&gt; 3&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&#39;third&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">disabled</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span><span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&#39;Item 4&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&#39;Item 4&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">disabled</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span><span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&#39;Item 5&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&#39;E&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">disabled</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="changing-the-option-field-names" tabindex="-1"><a class="header-anchor" href="#changing-the-option-field-names" aria-hidden="true">#</a> Changing the option field names</h3><p>If you want to customize the field property names (for example using <code>name</code> field for display <code>text</code>) you can easily change them by setting the <code>text-field</code>, <code>html-field</code>, <code>value-field</code>, and <code>disabled-field</code> props to a string that contains the property name you would like to use:</p>`,20),M={class:"mt-3"},R=p(" Selected: "),Y=u(`<div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-form-checkbox-group</span>
    <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>checkEx2Selected<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">:options</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>checkEx2Options<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mb-3<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">value-field</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">text-field</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>name<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">disabled-field</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>notEnabled<span class="token punctuation">&quot;</span></span>
  <span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-form-checkbox-group</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mt-3<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Selected: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>strong</span><span class="token punctuation">&gt;</span></span>{{ checkEx2Selected }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>strong</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">import</span> <span class="token punctuation">{</span>ref<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>

  <span class="token keyword">const</span> checkEx2Selected <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;A&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> checkEx2Options <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span><span class="token literal-property property">item</span><span class="token operator">:</span> <span class="token string">&#39;A&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Option A&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token literal-property property">item</span><span class="token operator">:</span> <span class="token string">&#39;B&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Option B&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token literal-property property">item</span><span class="token operator">:</span> <span class="token string">&#39;D&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Option C&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">notEnabled</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token literal-property property">item</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token literal-property property">d</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Option D&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><h2 id="checkbox-values-and-v-model" tabindex="-1"><a class="header-anchor" href="#checkbox-values-and-v-model" aria-hidden="true">#</a> Checkbox values and <code>v-model</code></h2><p>By default, <code>&lt;b-form-checkbox&gt;</code> value will be true when checked and false when unchecked. You can customize the checked and unchecked values by specifying the value and unchecked-value properties, respectively.</p><p>When you have multiple checkboxes that bind to a single data state variable, you must provide an array reference (<code>[ ]</code>) to your v-model.</p><p>Note that when v-model is bound to multiple checkboxes (i.e an array ref), the unchecked-value is <strong>not used</strong>. Only the value(s) of the checked checkboxes will be returned in the v-model bound array. You should provide a unique value for each checkbox&#39;s value prop (the default of true will not work when bound to an array)</p><p>To pre-check any checkboxes, set the v-model to the value(s) of the checks that you would like pre-selected.</p><p>When placing individual <code>&lt;b-form-checkbox&gt;</code> components within a <code>&lt;b-form-checkbox-group&gt;</code>, most props and the <code>v-model</code> are inherited from the <code>&lt;b-form-checkbox-group&gt;</code>.</p><p>Note: the unchecked-value prop does not affect the native <code>&lt;input&gt;</code>&#39;s <code>value</code> attribute, because browsers don&#39;t include unchecked boxes in form submissions. To guarantee that one of two values is submitted in a native <code>&lt;form&gt;</code> submit (e.g. &#39;yes&#39; or &#39;no&#39;), use radio inputs instead. This is the same limitation that Vue has with native checkbox inputs.</p>`,8),G={class:"mt-2"},H=p("Selected: "),X=u(`<div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-form-checkbox</span>
    <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>(car, index) in availableCars<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>index<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>selectedCars<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">:value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>car<span class="token punctuation">&quot;</span></span>
  <span class="token punctuation">&gt;</span></span>
    {{ car }}
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-form-checkbox</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mt-2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Selected: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>strong</span><span class="token punctuation">&gt;</span></span>{{ concatSelectedCars}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>strong</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">import</span> <span class="token punctuation">{</span>ref<span class="token punctuation">,</span> computed<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>

  <span class="token keyword">const</span> availableCars <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;BMW&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Mercedes&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Toyota&#39;</span><span class="token punctuation">]</span>
  <span class="token keyword">const</span> selectedCars <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

  <span class="token keyword">const</span> concatSelectedCars <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> selectedCars<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;, &#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><h3 id="multiple-checkboxes-and-accessibility" tabindex="-1"><a class="header-anchor" href="#multiple-checkboxes-and-accessibility" aria-hidden="true">#</a> Multiple checkboxes and accessibility</h3><p>When binding multiple checkboxes together, you must set the name prop to the same value for all <code>&lt;b-form-checkbox&gt;</code>s in the group individually. This will inform users of assistive technologies that the checkboxes are related and enables native browser keyboard navigation.</p><h2 id="inline-and-stacked-checkboxes" tabindex="-1"><a class="header-anchor" href="#inline-and-stacked-checkboxes" aria-hidden="true">#</a> Inline and stacked checkboxes</h2><p><code>&lt;b-form-checkbox-group&gt;</code> components render inline checkboxes by default, while <code>&lt;b-form-checkbox&gt;</code> renders block-level (stacked) checkboxes.</p><p>Set the prop <code>stacked</code> on <code>&lt;b-form-checkbox-group&gt;</code> to place each form control one over the other, or if using individual checkboxes not inside a <code>&lt;b-form-checkbox-group&gt;</code>, set the <code>inline</code> prop on <code>&lt;b-form-checkbox&gt;</code>.</p>`,6),J=a("div",{class:"my-2"},[a("label",null,"Form-checkbox-group inline checkboxes (default)")],-1),K=a("div",{class:"my-2"},[a("label",null,"Form-checkbox-group stacked checkboxes")],-1),Q=a("div",{class:"my-2"},[a("label",null,"Individual stacked checkboxes (default)")],-1),Z=a("div",{class:"my-2"},[a("label",null,"Individual inline checkboxes")],-1),$=u(`<div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>my-2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">&gt;</span></span>Form-checkbox-group inline checkboxes (default)<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-form-checkbox-group</span>
    <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>checkEx3Selected<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">:options</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>checkEx3Options<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>flavour-1a<span class="token punctuation">&quot;</span></span>
  <span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-form-checkbox-group</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>my-2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">&gt;</span></span>Form-checkbox-group stacked checkboxes<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-form-checkbox-group</span>
    <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>checkEx3Selected<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">:options</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>checkEx3Options<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>flavour-2a<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">stacked</span>
  <span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-form-checkbox-group</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>my-2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">&gt;</span></span>Individual stacked checkboxes (default)<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-form-checkbox</span>
    <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>option in checkEx3Options<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>checkEx3Selected<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>option.value<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">:value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>option.value<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>flavour-3a<span class="token punctuation">&quot;</span></span>
  <span class="token punctuation">&gt;</span></span>
    {{ option.text }}
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-form-checkbox</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>my-2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">&gt;</span></span>Individual inline checkboxes<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-form-checkbox</span>
    <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>option in checkEx3Options<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>checkEx3Selected<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>option.value<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">:value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>option.value<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>flavour-4a<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">inline</span>
  <span class="token punctuation">&gt;</span></span>
    {{ option.text }}
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-form-checkbox</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br></div></div><h2 id="control-sizing" tabindex="-1"><a class="header-anchor" href="#control-sizing" aria-hidden="true">#</a> Control sizing</h2><p>Use the <code>size</code> prop to control the size of the checkbox. The default size is medium. Supported size values are <code>sm</code> (small) and <code>lg</code> (large).</p>`,3),nn=p("Small"),an=p("Default"),sn=p("Large"),tn=u(`<div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-form-checkbox</span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sm<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Small<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-form-checkbox</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-form-checkbox</span><span class="token punctuation">&gt;</span></span>Default<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-form-checkbox</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-form-checkbox</span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>lg<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Large<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-form-checkbox</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="button-style-checkboxes" tabindex="-1"><a class="header-anchor" href="#button-style-checkboxes" aria-hidden="true">#</a> Button style checkboxes</h2><p>You can optionally render checkboxes to appear as buttons, either individually, or in a group.</p><p>Button style checkboxes will have the class .active automatically applied to the label when they are in the checked state.</p><h3 id="individual-checkbox-button-style" tabindex="-1"><a class="header-anchor" href="#individual-checkbox-button-style" aria-hidden="true">#</a> Individual checkbox button style</h3><p>A single checkbox can be rendered with a button appearance by setting the prop button to true</p><p>Change the button variant by setting the button-variant prop to one of the standard Bootstrap button variants (see <code>&lt;b-button&gt;</code> for supported variants). The default variant is secondary.</p>`,7),en={class:"d-flex flex-row"},pn=u(`<div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-form-checkbox</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>button1Checked<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>m-2<span class="token punctuation">&quot;</span></span> <span class="token attr-name">button</span><span class="token punctuation">&gt;</span></span>
  Button Checkbox (Checked: {{ button1Checked }})
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-form-checkbox</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-form-checkbox</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>button2Checked<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>m-2<span class="token punctuation">&quot;</span></span> <span class="token attr-name">button</span> <span class="token attr-name">button-variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>danger<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  Button Checkbox (Checked: {{ button2Checked }})
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-form-checkbox</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">import</span> <span class="token punctuation">{</span>ref<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>

  <span class="token keyword">const</span> button1Checked <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> button2Checked <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h3 id="grouped-button-style-checkboxes" tabindex="-1"><a class="header-anchor" href="#grouped-button-style-checkboxes" aria-hidden="true">#</a> Grouped button style checkboxes</h3>`,2),on=p("Render groups of checkboxes with the look of a button-group by setting the prop "),cn=a("code",null,"buttons",-1),ln=p(" on "),un=a("code",null,"<b-form-checkbox-group>",-1),rn=p(". Change the button variant by setting the "),dn=a("code",null,"button-variant",-1),kn=p(" prop to one of the standard Bootstrap button variants (see "),bn={href:"/docs/components/button",target:"_blank",rel:"noopener noreferrer"},hn=a("code",null,"<b-button>",-1),mn=p(" for supported variants). The default "),gn=a("code",null,"button-variant",-1),vn=p(" is "),fn=a("code",null,"secondary",-1),yn=p("."),xn=a("div",{class:"my-2"},[a("label",null,"Form-checkbox-group inline checkboxes (default)")],-1),qn=a("div",{class:"my-2"},[a("label",null,"Button-group style checkboxes with variant primary and large buttons")],-1),wn=a("div",{class:"my-2"},[a("label",null,"Stacked (vertical) button-group style checkboxes")],-1),_n=u(`<div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>my-2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">&gt;</span></span>Form-checkbox-group inline checkboxes (default)<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-form-checkbox-group</span>
  <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>checkEx3Selected<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">:options</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>checkEx3Options<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>buttons-1<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">buttons</span>
<span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-form-checkbox-group</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>my-2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">&gt;</span></span>Button-group style checkboxes with variant primary and large buttons<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-form-checkbox-group</span>
  <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>checkEx3Selected<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">:options</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>checkEx3Options<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">buttons</span>
  <span class="token attr-name">button-variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>primary<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>lg<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>buttons-2<span class="token punctuation">&quot;</span></span>
<span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-form-checkbox-group</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>my-2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">&gt;</span></span>Stacked (vertical) button-group style checkboxes<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-form-checkbox-group</span>
  <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>checkEx3Selected<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">:options</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>checkEx3Options<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">stacked</span>
  <span class="token attr-name">buttons</span>
<span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-form-checkbox-group</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">import</span> <span class="token punctuation">{</span>ref<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>

  <span class="token keyword">const</span> checkEx3Selected <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;A&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> checkEx3Options <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span><span class="token literal-property property">item</span><span class="token operator">:</span> <span class="token string">&#39;A&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Option A&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token literal-property property">item</span><span class="token operator">:</span> <span class="token string">&#39;B&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Option B&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token literal-property property">item</span><span class="token operator">:</span> <span class="token string">&#39;D&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Option C&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">notEnabled</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token literal-property property">item</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token literal-property property">d</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Option D&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br></div></div><h2 id="switch-style-checkboxes" tabindex="-1"><a class="header-anchor" href="#switch-style-checkboxes" aria-hidden="true">#</a> Switch style checkboxes</h2><p>Switch styling is supported on <code>&lt;b-form-checkbox&gt;</code> and <code>&lt;b-form-checkbox-group&gt;</code> components.</p><p><strong>Note:</strong> If the checkbox is in <a href="#button-style-checkboxes">button mode</a>, switch mode will have no effect.</p><h3 id="individual-checkbox-switch-style" tabindex="-1"><a class="header-anchor" href="#individual-checkbox-switch-style" aria-hidden="true">#</a> Individual checkbox switch style</h3><p>A single checkbox can be rendered with a switch appearance by setting the prop switch to true</p>`,6),Sn=p("Switch Checkbox "),Cn=u(`<div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-form-checkbox</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>switchChecked<span class="token punctuation">&quot;</span></span> <span class="token attr-name">switch</span><span class="token punctuation">&gt;</span></span>
  Switch Checkbox <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>strong</span><span class="token punctuation">&gt;</span></span>(Checked: {{ switchChecked }})<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>strong</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-form-checkbox</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">import</span> <span class="token punctuation">{</span>ref<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>

  <span class="token keyword">const</span> switchChecked <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="grouped-switch-style-checkboxes" tabindex="-1"><a class="header-anchor" href="#grouped-switch-style-checkboxes" aria-hidden="true">#</a> Grouped switch style checkboxes</h3><p>Render groups of checkboxes with the look of a switches by setting the prop <code>switches</code> on <code>&lt;b-form-checkbox-group&gt;</code>.</p>`,3),Vn=a("div",{class:"my-2"},[a("label",null,"Inline switch style checkboxes")],-1),Bn=a("div",{class:"my-2"},[a("label",null,"Stacked (vertical) switch style checkboxes")],-1),En=u(`<div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>my-2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">&gt;</span></span>Inline switch style checkboxes<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-form-checkbox-group</span>
  <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>groupSwitchSelected<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">:options</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>groupSwitchOptions<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">switches</span>
<span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-form-checkbox-group</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>my-2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">&gt;</span></span>Stacked (vertical) switch style checkboxes<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-form-checkbox-group</span>
  <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>groupSwitchSelected<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">:options</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>groupSwitchOptions<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">switches</span>
  <span class="token attr-name">stacked</span>
<span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-form-checkbox-group</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">import</span> <span class="token punctuation">{</span>ref<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>

  <span class="token keyword">const</span> groupSwitchSelected <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> groupSwitchOptions <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span><span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&#39;Red&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&#39;red&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&#39;Green&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&#39;green&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&#39;Yellow (disabled)&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&#39;yellow&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">disabled</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&#39;Blue&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&#39;blue&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div><h3 id="switch-sizing" tabindex="-1"><a class="header-anchor" href="#switch-sizing" aria-hidden="true">#</a> Switch sizing</h3><p>Use the <code>size</code> prop to control the size of the switch. The default size is medium. Supported size values are <code>sm</code> (small) and <code>lg</code> (large).</p>`,3),On=p("Small"),zn=p("Default"),In=p("Large"),Dn=u(`<div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-form-checkbox</span> <span class="token attr-name">switch</span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sm<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Small<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-form-checkbox</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-form-checkbox</span> <span class="token attr-name">switch</span><span class="token punctuation">&gt;</span></span>Default<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-form-checkbox</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-form-checkbox</span> <span class="token attr-name">switch</span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>lg<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Large<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-form-checkbox</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>

<span class="token comment">&lt;!-- form-checkbox-switch-sizes.vue --&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>Sizes can be set on individual <code>&lt;b-form-checkbox&gt;</code> components, or inherited from the size setting of <code>&lt;b-form-checkbox-group&gt;</code>.</p><p><strong>Note:</strong> Bootstrap v5.x does not natively support sizes for the custom switch control. However, Bootstrap-Vue-3 includes custom SCSS/CSS that adds support for sizing the custom switches.</p><h2 id="non-custom-check-inputs-plain" tabindex="-1"><a class="header-anchor" href="#non-custom-check-inputs-plain" aria-hidden="true">#</a> Non-custom check inputs (plain)</h2><p>You can have <code>&lt;b-form-checkbox-group&gt;</code> or <code>&lt;b-form-checkbox&gt;</code> render a browser native checkbox input by setting the <code>plain</code> prop.</p>`,5),jn=a("div",{class:"my-2"},[a("label",null,"Plain inline checkboxes")],-1),Tn=a("div",{class:"my-2"},[a("label",null,"Plain stacked checkboxes")],-1),An=u(`<div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>my-2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">&gt;</span></span>Plain inline checkboxes<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-form-checkbox-group</span>
  <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>groupSwitchSelected<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">:options</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>groupSwitchOptions<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">plain</span>
<span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-form-checkbox-group</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>my-2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">&gt;</span></span>Plain stacked checkboxes<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-form-checkbox-group</span>
  <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>groupSwitchSelected<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">:options</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>groupSwitchOptions<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">plain</span>
  <span class="token attr-name">stacked</span>
<span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-form-checkbox-group</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h2 id="contextual-states" tabindex="-1"><a class="header-anchor" href="#contextual-states" aria-hidden="true">#</a> Contextual states</h2><p>Bootstrap includes validation styles for valid and invalid states on most form controls.</p><p>Generally speaking, you&#39;ll want to use a particular state for specific types of feedback:</p><ul><li><code>false</code> (denotes invalid state) is great for when there&#39;s a blocking or required field. A user must fill in this field properly to submit the form.</li><li><code>true</code> (denotes valid state) is ideal for situations when you have per-field validation throughout a form and want to encourage a user through the rest of the fields.</li><li><code>null</code> Displays no validation state (neither valid nor invalid)</li></ul><p>To apply one of the contextual state icons on <code>&lt;b-form-checkbox&gt;</code>, set the <code>state</code> prop to <code>false</code> (for invalid), <code>true</code> (for valid), or <code>null</code> (no validation state).</p><p><strong>Note:</strong> Contextual states are <strong>not</strong> supported when in button mode.</p><h3 id="contextual-state-and-validation-example" tabindex="-1"><a class="header-anchor" href="#contextual-state-and-validation-example" aria-hidden="true">#</a> Contextual state and validation example</h3>`,8),Un=p("Checkbox state false"),Wn=p("Checkbox state true"),Fn=p("Checkbox state null"),Nn=a("p",null,null,-1),Pn={key:0},Ln={key:1},Mn=u(`<div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-form-checkbox</span> <span class="token attr-name">:state</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>false<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Checkbox state false<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-form-checkbox</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-form-checkbox</span> <span class="token attr-name">:state</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Checkbox state true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-form-checkbox</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-form-checkbox</span><span class="token punctuation">&gt;</span></span>Checkbox state null<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-form-checkbox</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-form-checkbox-group</span>
  <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>contextualSelected<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">:options</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>contextualStateOptions<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">:state</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>contextualState<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>checkbox-validation<span class="token punctuation">&quot;</span></span>
<span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-form-checkbox-group</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>!contextualState<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Please select two<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>contextualState<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Thank you<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">import</span> <span class="token punctuation">{</span>ref<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>

  <span class="token keyword">const</span> contextualStateOptions <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span><span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&#39;First Check&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&#39;first&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&#39;Second Check&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&#39;second&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&#39;Third Check&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&#39;third&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span>

  <span class="token keyword">const</span> contextualSelected <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> contextualState <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> contextualSelected<span class="token punctuation">.</span>value<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">2</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><h3 id="required-constraint" tabindex="-1"><a class="header-anchor" href="#required-constraint" aria-hidden="true">#</a> Required constraint</h3><p>When using individual <code>&lt;b-form-checkbox&gt;</code> components (not in a <code>&lt;b-form-checkbox-group&gt;</code>), and you want the checkbox(es) to be <code>required</code> in your form, you <strong>must</strong> provide a <code>name</code> on each <code>&lt;b-form-checkbox&gt;</code> in order for the required constraint to work. All <code>&lt;b-form-checkbox&gt;</code> components tied to the same <code>v-model</code> <strong>must</strong> have the same <code>name</code>.</p><p>The <code>name</code> is required in order for Assistive Technologies (such as screen readers, and keyboard only users) to know which checkboxes belong to the same form variable (the name also automatically enables native browser keyboard navigation), hence <code>required</code> will only work if <code>name</code> is set. <code>&lt;b-form-checkbox-group&gt;</code> will automatically generate a unique input name if one is not provided on the group.</p><h2 id="autofocus" tabindex="-1"><a class="header-anchor" href="#autofocus" aria-hidden="true">#</a> Autofocus</h2><p>When the <code>autofocus</code> prop is set on <code>&lt;b-form-checkbox&gt;</code>, the input will be auto-focused when it is inserted (i.e. <strong>mounted</strong>) into the document, or re-activated when inside a Vue <code>&lt;keep-alive&gt;</code> component. Note that this prop <strong>does not</strong> set the <code>autofocus</code> attribute on the input, nor can it tell when the input becomes visible.</p><h2 id="indeterminate-tri-state-support" tabindex="-1"><a class="header-anchor" href="#indeterminate-tri-state-support" aria-hidden="true">#</a> Indeterminate (tri-state) support</h2><p>Normally a checkbox input can only have two states: checked or unchecked. They can have any value, but they either submit that value (checked) or don&#39;t (unchecked) with a form submission (although BootstrapVue allows a value for the unchecked state on a single checkbox)</p><p>Visually, there are actually three states a checkbox can be in: checked, unchecked, or <strong>indeterminate</strong>.</p><p>The indeterminate state is <strong>visual only</strong>. The checkbox is still either checked or unchecked as a value. That means the visual indeterminate state masks the real value of the checkbox, so that better make sense in your UI!</p><p><code>&lt;b-form-checkbox&gt;</code> supports setting this visual indeterminate state via the indeterminate prop (defaults to false). Clicking the checkbox will clear its indeterminate state.</p>`,11),Rn=p("Click me to see what happens"),Yn={class:"mt-2"},Gn=p(" Checked: "),Hn=u(`<div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-form-checkbox</span> <span class="token attr-name">:indeterminate</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Click me to see what happens<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-form-checkbox</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">import</span> <span class="token punctuation">{</span>ref<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>

  <span class="token keyword">const</span> intermChecked <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="component-reference" tabindex="-1"><a class="header-anchor" href="#component-reference" aria-hidden="true">#</a> Component reference</h2><h3 id="b-form-checkbox-group" tabindex="-1"><a class="header-anchor" href="#b-form-checkbox-group" aria-hidden="true">#</a> <code>&lt;b-form-checkbox-group&gt;</code></h3><h4 id="properties" tabindex="-1"><a class="header-anchor" href="#properties" aria-hidden="true">#</a> Properties</h4><table><thead><tr><th>Property</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td><code>aria-invalid</code></td><td><code>Boolean</code> or <code>String</code></td><td><code>false</code></td><td>Sets the &#39;aria-invalid&#39; attribute value on the wrapper element. When not provided, the &#39;state&#39; prop will control the attribute</td></tr><tr><td><code>autofocus</code></td><td><code>Boolean</code></td><td><code>false</code></td><td>When set to <code>true</code>, attempts to auto-focus the control when it is mounted, or re-activated when in a keep-alive. Does not set the <code>autofocus</code> attribute on the control</td></tr><tr><td><code>button-variant</code></td><td><code>String</code></td><td><code>secondary</code></td><td>Specifies the Bootstrap contextual color theme variant the apply to the button style checkboxes&#39; mode</td></tr><tr><td><code>buttons</code></td><td><code>Boolean</code></td><td><code>false</code></td><td>When set, renders the checkboxes in this group with button styling</td></tr><tr><td><code>disabled</code></td><td><code>Boolean</code></td><td><code>false</code></td><td>When set to <code>true</code>, disables the component&#39;s functionality and places it in a disabled state</td></tr><tr><td><code>disabled-field</code></td><td><code>String</code></td><td><code>disabled</code></td><td>Field name in the <code>options</code> array that should be used for the disabled state</td></tr><tr><td><code>form</code></td><td><code>String</code></td><td></td><td>ID of the form that the form control belongs to. Sets the <code>form</code> attribute on the control</td></tr><tr><td><code>html-field</code> <span class="bg-warning text-black fw-bold" style="white-space:nowrap;">Use with caution</span></td><td><code>String</code></td><td><code>html</code></td><td>Field name in the <code>options</code> array that should be used for the html label instead of text field</td></tr><tr><td><code>id</code></td><td><code>String</code></td><td></td><td>Used to set the <code>id</code> attribute on the rendered content, and used as the base to generate any additional element IDs as needed. When not set, an autogenerated id is used.</td></tr><tr><td><code>name</code></td><td><code>String</code></td><td></td><td>Sets the value of the <code>name</code> attribute of the form control</td></tr><tr><td><code>options</code></td><td><code>Array</code> or <s><code>Object</code></s></td><td><code>false</code></td><td>Array of items to render in the component styling</td></tr><tr><td><code>plain</code></td><td><code>Boolean</code></td><td><code>false</code></td><td>Renders the form control in plain mode, rather than custom styled mode</td></tr><tr><td><code>required</code></td><td><code>Boolean</code></td><td></td><td>Adds the <code>required</code> attribute to the form control when <code>name</code> is also filled in.</td></tr><tr><td><code>size</code></td><td><code>String</code></td><td><code>md</code></td><td>Set the size of the component&#39;s appearance. &#39;sm&#39;, &#39;md&#39; (default), or &#39;lg&#39;</td></tr><tr><td><code>stacked</code></td><td><code>Boolean</code></td><td><code>false</code></td><td>When set, renders the checkbox group in stacked mode</td></tr><tr><td><code>state</code></td><td><code>Boolean</code></td><td><code>null</code></td><td>Controls the validation state appearance of the component. <code>true</code> for valid, <code>false</code> for invalid, or <code>null</code> for no validation state</td></tr><tr><td><code>switches</code></td><td><code>Boolean</code></td><td><code>false</code></td><td>When set, renders the checkboxes in the group with switch styling</td></tr><tr><td><code>text-field</code></td><td><code>String</code></td><td><code>text</code></td><td>Field name in the <code>options</code> array that should be used for the text label</td></tr><tr><td><code>validated</code></td><td><code>Boolean</code></td><td><code>false</code></td><td>When set, adds the Bootstrap class &#39;was-validated&#39; to the group wrapper</td></tr><tr><td><code>value-field</code></td><td><code>String</code></td><td><code>value</code></td><td>Field name in the <code>options</code> array that should be used for the value</td></tr></tbody></table><p class="alert alert-warning"><strong>Caution:</strong> Props that support HTML strings (<code>*-html</code>) can be vulnerable to <a class="alert-link" href="https://en.wikipedia.org/wiki/Cross-site_scripting"><abbr title="Cross Site Scripting Attacks">XSS attacks</abbr></a>when passed raw user supplied values. You must properly <a class="alert-link" href="https://en.wikipedia.org/wiki/HTML_sanitization">sanitize</a> the user input first! </p><h4 id="v-model" tabindex="-1"><a class="header-anchor" href="#v-model" aria-hidden="true">#</a> v-model</h4><table><thead><tr><th>Property</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td>default modelValue</td><td><code>Array</code></td><td><code>[ ]</code></td><td>The value of the selected checkbox(es).</td></tr></tbody></table><h4 id="slots" tabindex="-1"><a class="header-anchor" href="#slots" aria-hidden="true">#</a> Slots</h4><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td><code>default</code></td><td>Content (form checkboxes) to place in the form checkbox group</td></tr><tr><td><code>first</code></td><td>Slot to place b-form-checks so that they appear before checks generated from options prop</td></tr></tbody></table><h4 id="events" tabindex="-1"><a class="header-anchor" href="#events" aria-hidden="true">#</a> Events</h4><table><thead><tr><th>Name</th><th>Argument</th><th>Description</th></tr></thead><tbody><tr><td><code>update:modelValue</code></td><td><code>checked</code> - Value of checkboxes. Value will be an array</td><td>Emitted when the modelValue value is changed</td></tr></tbody></table><h3 id="b-form-checkbox" tabindex="-1"><a class="header-anchor" href="#b-form-checkbox" aria-hidden="true">#</a> <code>&lt;b-form-checkbox&gt;</code></h3><h4 id="properties-1" tabindex="-1"><a class="header-anchor" href="#properties-1" aria-hidden="true">#</a> Properties</h4><table><thead><tr><th>Property</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td><code>aria-label</code></td><td><code>String</code></td><td></td><td>Sets the value of <code>aria-label</code> attribute on the rendered element</td></tr><tr><td><code>aria-labeledby</code></td><td><code>String</code></td><td></td><td>The ID of the element that provides a label for this component. Used as the value for the <code>aria-labelledby</code> attribute</td></tr><tr><td><code>autofocus</code></td><td><code>Boolean</code></td><td><code>false</code></td><td>When set to <code>true</code>, attempts to auto-focus the control when it is mounted, or re-activated when in a keep-alive. Does not set the <code>autofocus</code> attribute on the control</td></tr><tr><td><code>button</code></td><td><code>Boolean</code></td><td><code>false</code></td><td>When set, renders the checkbox with the appearance of a button</td></tr><tr><td><code>button-variant</code></td><td><code>String</code></td><td><code>secondary</code></td><td>Applies one of Bootstrap&#39;s theme colors when in &#39;button&#39; mode</td></tr><tr><td><code>disabled</code></td><td><code>Boolean</code></td><td><code>false</code></td><td>When set to <code>true</code>, disables the component&#39;s functionality and places it in a disabled state</td></tr><tr><td><code>form</code></td><td><code>String</code></td><td></td><td>ID of the form that the form control belongs to. Sets the <code>form</code> attribute on the control</td></tr><tr><td><code>id</code></td><td><code>String</code></td><td></td><td>Used to set the <code>id</code> attribute on the rendered content, and used as the base to generate any additional element IDs as needed. When not set, an autogenerated id is used.</td></tr><tr><td><code>indeterminate</code></td><td><code>Boolean</code></td><td><code>false</code></td><td>Renders the checkbox in an indeterminate state.</td></tr><tr><td><code>inline</code></td><td><code>Boolean</code></td><td><code>false</code></td><td>When set, renders the checkbox as an inline element rather than as a 100% width block</td></tr><tr><td><code>name</code></td><td><code>String</code></td><td></td><td>Sets the value of the <code>name</code> attribute on the form control</td></tr><tr><td><code>plain</code></td><td><code>Boolean</code></td><td><code>false</code></td><td>Renders the form control in plain mode, rather than custom styled mode</td></tr><tr><td><code>required</code></td><td><code>Boolean</code></td><td></td><td>Adds the <code>required</code> attribute to the form control when <code>name</code> is also filled in.</td></tr><tr><td><code>size</code></td><td><code>String</code></td><td><code>md</code></td><td>Set the size of the component&#39;s appearance. &#39;sm&#39;, &#39;md&#39; (default), or &#39;lg&#39;</td></tr><tr><td><code>state</code></td><td><code>Boolean</code></td><td></td><td>Controls the validation state appearance of the component. <code>true</code> for valid, <code>false</code> for invalid, or <code>null</code> for no validation state</td></tr><tr><td><code>switch</code></td><td><code>Boolean</code></td><td><code>false</code></td><td>When set, renders the checkbox with the appearance of a switch</td></tr><tr><td><span style="white-space:nowrap;"><code>unchecked-value</code></span></td><td><code>String</code>,<code>Boolean</code>, <code>Number</code></td><td><code>false</code></td><td>Value returned when this checkbox is unchecked.</td></tr><tr><td><code>value</code></td><td><code>String</code>,<code>Boolean</code>,<code>Number</code>, <code>Object</code></td><td><code>false</code></td><td>Value returned when this checkbox is checked.</td></tr></tbody></table><h4 id="v-model-1" tabindex="-1"><a class="header-anchor" href="#v-model-1" aria-hidden="true">#</a> v-model</h4><table><thead><tr><th>Property</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td>default modelValue</td><td><code>Boolean,String, Array, Number</code></td><td><code>null</code></td><td>The value of the checkbox(es). Must be an array when there are multiple checkboxes</td></tr></tbody></table><h4 id="slots-1" tabindex="-1"><a class="header-anchor" href="#slots-1" aria-hidden="true">#</a> Slots</h4><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td><code>default</code></td><td>Content to place in the label of the form checkbox</td></tr></tbody></table><h4 id="events-1" tabindex="-1"><a class="header-anchor" href="#events-1" aria-hidden="true">#</a> Events</h4><table><thead><tr><th>Name</th><th>Argument</th><th>Description</th></tr></thead><tbody><tr><td><code>change</code></td><td><code>checked</code> - Value of checkbox(es). When bound to multiple checkboxes, value will be an array</td><td>Emitted when selected value(s) is changed due to user interaction</td></tr><tr><td><code>input</code></td><td><code>checked</code> - Value of checkbox(es). When bound to multiple checkboxes, value will be an array</td><td>Emitted when selected value(s) is changed</td></tr></tbody></table>`,21),Xn=P({setup(Jn){const w=d(!1),_=d(!1),S=d(!1),C=d(!0),j=["BMW","Mercedes","Toyota"],V=d([]),T=I(()=>V.value.join(", ")),B=d(["A"]),A=[{item:"A",name:"Option A"},{item:"B",name:"Option B"},{item:"D",name:"Option C",notEnabled:!0},{item:{d:1},name:"Option D"}],c=d([]),h=[{text:"Orange",value:"orange"},{text:"Apple",value:"apple"},{text:"Pineapple",value:"pineapple"},{text:"Grape",value:"grape"}],b=d([]),y=[{text:"Red",value:"red"},{text:"Green",value:"green"},{text:"Yellow (disabled)",value:"yellow",disabled:!0},{text:"Blue",value:"blue"}],U=[{text:"First Check",value:"first"},{text:"Second Check",value:"second"},{text:"Third Check",value:"third"}],E=d([]),O=I(()=>E.value.length===2);return(Kn,e)=>{const i=f("b-form-checkbox-group"),r=f("b-card"),l=f("ClientOnly"),o=f("b-form-checkbox"),W=f("ExternalLinkIcon");return m(),g(x,null,[L,n(l,null,{default:t(()=>[n(r,null,{default:t(()=>[a("div",null,[n(i,{modelValue:B.value,"onUpdate:modelValue":e[0]||(e[0]=s=>B.value=s),options:A,class:"mb-3","value-field":"item","text-field":"name","disabled-field":"notEnabled"},null,8,["modelValue"]),a("div",M,[R,a("strong",null,k(B.value),1)])])]),_:1})]),_:1}),Y,n(l,null,{default:t(()=>[n(r,null,{default:t(()=>[a("div",null,[(m(),g(x,null,z(j,(s,v)=>n(o,{key:v,modelValue:V.value,"onUpdate:modelValue":e[1]||(e[1]=F=>V.value=F),value:s},{default:t(()=>[p(k(s),1)]),_:2},1032,["modelValue","value"])),64))]),a("div",G,[H,a("strong",null,k(q(T)),1)])]),_:1})]),_:1}),X,n(l,null,{default:t(()=>[n(r,null,{default:t(()=>[a("div",null,[J,n(i,{modelValue:c.value,"onUpdate:modelValue":e[2]||(e[2]=s=>c.value=s),options:h,name:"flavour-1a"},null,8,["modelValue"]),K,n(i,{modelValue:c.value,"onUpdate:modelValue":e[3]||(e[3]=s=>c.value=s),options:h,name:"flavour-2a",stacked:""},null,8,["modelValue"]),Q,(m(),g(x,null,z(h,s=>n(o,{modelValue:c.value,"onUpdate:modelValue":e[4]||(e[4]=v=>c.value=v),key:s.value,value:s.value,name:"flavour-3a"},{default:t(()=>[p(k(s.text),1)]),_:2},1032,["modelValue","value"])),64)),Z,(m(),g(x,null,z(h,s=>n(o,{modelValue:c.value,"onUpdate:modelValue":e[5]||(e[5]=v=>c.value=v),key:s.value,value:s.value,name:"flavour-4a",inline:""},{default:t(()=>[p(k(s.text),1)]),_:2},1032,["modelValue","value"])),64))])]),_:1})]),_:1}),$,n(l,null,{default:t(()=>[n(r,null,{default:t(()=>[a("div",null,[n(o,{size:"sm"},{default:t(()=>[nn]),_:1}),n(o,null,{default:t(()=>[an]),_:1}),n(o,{size:"lg"},{default:t(()=>[sn]),_:1})])]),_:1})]),_:1}),tn,n(l,null,{default:t(()=>[n(r,null,{default:t(()=>[a("div",en,[n(o,{modelValue:w.value,"onUpdate:modelValue":e[6]||(e[6]=s=>w.value=s),class:"m-2",button:""},{default:t(()=>[p(" Button Checkbox (Checked: "+k(w.value)+") ",1)]),_:1},8,["modelValue"]),n(o,{modelValue:_.value,"onUpdate:modelValue":e[7]||(e[7]=s=>_.value=s),class:"m-2",button:"","button-variant":"danger"},{default:t(()=>[p(" Button Checkbox (Checked: "+k(_.value)+") ",1)]),_:1},8,["modelValue"])])]),_:1})]),_:1}),pn,a("p",null,[on,cn,ln,un,rn,dn,kn,a("a",bn,[hn,n(W)]),mn,gn,vn,fn,yn]),n(l,null,{default:t(()=>[n(r,null,{default:t(()=>[xn,n(i,{modelValue:c.value,"onUpdate:modelValue":e[8]||(e[8]=s=>c.value=s),options:h,name:"buttons-1",buttons:""},null,8,["modelValue"]),qn,n(i,{modelValue:c.value,"onUpdate:modelValue":e[9]||(e[9]=s=>c.value=s),options:h,buttons:"","button-variant":"primary",size:"lg",name:"buttons-2"},null,8,["modelValue"]),wn,n(i,{modelValue:c.value,"onUpdate:modelValue":e[10]||(e[10]=s=>c.value=s),options:h,stacked:"",buttons:""},null,8,["modelValue"])]),_:1})]),_:1}),_n,n(l,null,{default:t(()=>[n(r,null,{default:t(()=>[n(o,{modelValue:S.value,"onUpdate:modelValue":e[11]||(e[11]=s=>S.value=s),switch:""},{default:t(()=>[Sn,a("strong",null,"(Checked: "+k(S.value)+")",1)]),_:1},8,["modelValue"])]),_:1})]),_:1}),Cn,n(l,null,{default:t(()=>[n(r,null,{default:t(()=>[Vn,n(i,{modelValue:b.value,"onUpdate:modelValue":e[12]||(e[12]=s=>b.value=s),options:y,switches:""},null,8,["modelValue"]),Bn,n(i,{modelValue:b.value,"onUpdate:modelValue":e[13]||(e[13]=s=>b.value=s),options:y,switches:"",stacked:""},null,8,["modelValue"])]),_:1})]),_:1}),En,n(l,null,{default:t(()=>[n(r,null,{default:t(()=>[n(o,{switch:"",size:"sm"},{default:t(()=>[On]),_:1}),n(o,{switch:""},{default:t(()=>[zn]),_:1}),n(o,{switch:"",size:"lg"},{default:t(()=>[In]),_:1})]),_:1})]),_:1}),Dn,n(l,null,{default:t(()=>[n(r,null,{default:t(()=>[jn,n(i,{modelValue:b.value,"onUpdate:modelValue":e[14]||(e[14]=s=>b.value=s),options:y,plain:""},null,8,["modelValue"]),Tn,n(i,{modelValue:b.value,"onUpdate:modelValue":e[15]||(e[15]=s=>b.value=s),options:y,plain:"",stacked:""},null,8,["modelValue"])]),_:1})]),_:1}),An,n(l,null,{default:t(()=>[n(r,null,{default:t(()=>[n(o,{state:!1},{default:t(()=>[Un]),_:1}),n(o,{state:!0},{default:t(()=>[Wn]),_:1}),n(o,null,{default:t(()=>[Fn]),_:1}),Nn,n(i,{modelValue:E.value,"onUpdate:modelValue":e[16]||(e[16]=s=>E.value=s),options:U,state:q(O),name:"checkbox-validation"},null,8,["modelValue","state"]),q(O)?D("",!0):(m(),g("div",Pn,"Please select two")),q(O)?(m(),g("div",Ln,"Thank you")):D("",!0)]),_:1})]),_:1}),Mn,n(l,null,{default:t(()=>[n(r,null,{default:t(()=>[n(o,{modelValue:C.value,"onUpdate:modelValue":e[17]||(e[17]=s=>C.value=s),indeterminate:!0},{default:t(()=>[Rn]),_:1},8,["modelValue"]),a("div",Yn,[Gn,a("strong",null,k(C.value),1)])]),_:1})]),_:1}),Hn,n(l)],64)}}});var Zn=N(Xn,[["__file","FormCheckbox.html.vue"]]);export{Zn as default};
