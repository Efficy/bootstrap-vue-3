import{_ as r,o as h,c as g,a as s,b as n,d as a,w as t,e as c,r as o}from"./app.d37c7ed7.js";const k={},m=c('<h1 id="accordion" tabindex="-1"><a class="header-anchor" href="#accordion" aria-hidden="true">#</a> Accordion</h1><p>Build vertically collapsing accordions in combination with <code>&lt;b-collapse&gt;</code> component.</p><h2 id="how-it-works" tabindex="-1"><a class="header-anchor" href="#how-it-works" aria-hidden="true">#</a> How it works</h2><p>The <code>&lt;b-accordion-item&gt;</code> uses the <code>&lt;b-collapse&gt;</code> component internally to make it collapsible. To render an accordion that\u2019s expanded, add the <code>visible</code> property on the <code>&lt;b-accordion-item&gt;</code> component.</p>',4),v={class:"custom-container tip"},b=s("p",{class:"custom-container-title"},"TIP",-1),f={href:"https://getbootstrap.com/docs/5.0/getting-started/accessibility/#reduced-motion",target:"_blank",rel:"noopener noreferrer"},w=s("h2",{id:"example",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#example","aria-hidden":"true"},"#"),n(" Example")],-1),y=s("p",null,"Click the accordions below to expand/collapse the accordion content.",-1),_=s("strong",null,"This is the first item's accordion body.",-1),S=s("code",null,".accordion-body",-1),T=s("strong",null,"This is the second item's accordion body.",-1),I=s("code",null,".accordion-body",-1),C=s("strong",null,"This is the third item's accordion body.",-1),q=s("code",null,".accordion-body",-1),x=c(`<div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-accordion</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-accordion-item</span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Accordion Item #1<span class="token punctuation">&quot;</span></span> <span class="token attr-name">visible</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>strong</span><span class="token punctuation">&gt;</span></span>This is the first item&#39;s accordion body.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>strong</span><span class="token punctuation">&gt;</span></span> It is shown by default, until the
    collapse plugin adds the appropriate classes that we use to style each element. These classes
    control the overall appearance, as well as the showing and hiding via CSS transitions. You can
    modify any of this with custom CSS or overriding our default variables. It&#39;s also worth noting
    that just about any HTML can go within the <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>code</span><span class="token punctuation">&gt;</span></span>.accordion-body<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>code</span><span class="token punctuation">&gt;</span></span>, though the transition
    does limit overflow.
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-accordion-item</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-accordion-item</span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Accordion Item #2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>strong</span><span class="token punctuation">&gt;</span></span>This is the second item&#39;s accordion body.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>strong</span><span class="token punctuation">&gt;</span></span> It is hidden by default, until the
    collapse plugin adds the appropriate classes that we use to style each element. These classes
    control the overall appearance, as well as the showing and hiding via CSS transitions. You can
    modify any of this with custom CSS or overriding our default variables. It&#39;s also worth noting
    that just about any HTML can go within the <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>code</span><span class="token punctuation">&gt;</span></span>.accordion-body<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>code</span><span class="token punctuation">&gt;</span></span>, though the transition
    does limit overflow.
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-accordion-item</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-accordion-item</span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Accordion Item #3<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>strong</span><span class="token punctuation">&gt;</span></span>This is the third item&#39;s accordion body.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>strong</span><span class="token punctuation">&gt;</span></span> It is hidden by default, until the
    collapse plugin adds the appropriate classes that we use to style each element. These classes
    control the overall appearance, as well as the showing and hiding via CSS transitions. You can
    modify any of this with custom CSS or overriding our default variables. It&#39;s also worth noting
    that just about any HTML can go within the <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>code</span><span class="token punctuation">&gt;</span></span>.accordion-body<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>code</span><span class="token punctuation">&gt;</span></span>, though the transition
    does limit overflow.
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-accordion-item</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-accordion</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="flush" tabindex="-1"><a class="header-anchor" href="#flush" aria-hidden="true">#</a> Flush</h3><p>Add <code>flush</code> property to remove the default background-color, some borders, and some rounded corners to render accordions edge-to-edge with their parent container.</p>`,3),A=s("code",null,"flush",-1),L=s("code",null,"flush",-1),j=s("code",null,"flush",-1),H=c(`<div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-accordion</span> <span class="token attr-name">flush</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-accordion-item</span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Accordion Item #1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    Placeholder content for this accordion, which is intended to demonstrate the
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>code</span><span class="token punctuation">&gt;</span></span>flush<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>code</span><span class="token punctuation">&gt;</span></span> property. This is the first item&#39;s accordion body.
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-accordion-item</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-accordion-item</span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Accordion Item #2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    Placeholder content for this accordion, which is intended to demonstrate the
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>code</span><span class="token punctuation">&gt;</span></span>flush<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>code</span><span class="token punctuation">&gt;</span></span> property. This is the second item&#39;s accordion body. Let&#39;s imagine this being
    filled with some actual content.
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-accordion-item</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-accordion-item</span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Accordion Item #3<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    Placeholder content for this accordion, which is intended to demonstrate the
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>code</span><span class="token punctuation">&gt;</span></span>flush<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>code</span><span class="token punctuation">&gt;</span></span> property. This is the third item&#39;s accordion body. Nothing more exciting
    happening here in terms of content, but just filling up the space to make it look, at least at
    first glance, a bit more representative of how this would look in a real-world application.
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-accordion-item</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-accordion</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="always-open" tabindex="-1"><a class="header-anchor" href="#always-open" aria-hidden="true">#</a> Always open</h3><p>Add <code>free</code> property to make accordion items stay open when another item is opened.</p>`,3),M=s("strong",null,"This is the first item's accordion body.",-1),Y=s("code",null,"default",-1),P=s("strong",null,"This is the second item's accordion body.",-1),N=s("code",null,"default",-1),B=s("strong",null,"This is the third item's accordion body.",-1),E=s("code",null,"default",-1),V=c(`<div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-accordion</span> <span class="token attr-name">free</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-accordion-item</span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Accordion Item #1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>strong</span><span class="token punctuation">&gt;</span></span>This is the first item&#39;s accordion body.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>strong</span><span class="token punctuation">&gt;</span></span> It is shown by default, until the
    collapse plugin adds the appropriate classes that we use to style each element. These classes
    control the overall appearance, as well as the showing and hiding via CSS transitions. You can
    modify any of this with custom CSS or overriding our default variables. It&#39;s also worth noting
    that just about any HTML can go within the <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>code</span><span class="token punctuation">&gt;</span></span>default<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>code</span><span class="token punctuation">&gt;</span></span> slot, though the transition does
    limit overflow.
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-accordion-item</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-accordion-item</span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Accordion Item #2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>strong</span><span class="token punctuation">&gt;</span></span>This is the second item&#39;s accordion body.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>strong</span><span class="token punctuation">&gt;</span></span> It is hidden by default, until the
    collapse plugin adds the appropriate classes that we use to style each element. These classes
    control the overall appearance, as well as the showing and hiding via CSS transitions. You can
    modify any of this with custom CSS or overriding our default variables. It&#39;s also worth noting
    that just about any HTML can go within the <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>code</span><span class="token punctuation">&gt;</span></span>default<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>code</span><span class="token punctuation">&gt;</span></span> slot, though the transition does
    limit overflow.
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-accordion-item</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-accordion-item</span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Accordion Item #3<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>strong</span><span class="token punctuation">&gt;</span></span>This is the third item&#39;s accordion body.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>strong</span><span class="token punctuation">&gt;</span></span> It is hidden by default, until the
    collapse plugin adds the appropriate classes that we use to style each element. These classes
    control the overall appearance, as well as the showing and hiding via CSS transitions. You can
    modify any of this with custom CSS or overriding our default variables. It&#39;s also worth noting
    that just about any HTML can go within the <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>code</span><span class="token punctuation">&gt;</span></span>default<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>code</span><span class="token punctuation">&gt;</span></span> slot, though the transition does
    limit overflow.
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-accordion-item</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-accordion</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1);function O(R,F){const u=o("ExternalLinkIcon"),e=o("b-accordion-item"),l=o("b-accordion"),p=o("b-card"),i=o("ClientOnly"),d=o("ComponentReference");return h(),g("div",null,[m,s("div",v,[b,s("p",null,[n("The animation effect of this component is dependent on the prefers-reduced-motion media query. See the "),s("a",f,[n("reduced motion section of our accessibility documentation"),a(u)]),n(".")])]),w,y,a(i,null,{default:t(()=>[a(p,{class:"text-dark"},{default:t(()=>[a(l,null,{default:t(()=>[a(e,{title:"Accordion Item #1",visible:""},{default:t(()=>[_,n(" It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the "),S,n(", though the transition does limit overflow. ")]),_:1}),a(e,{title:"Accordion Item #2"},{default:t(()=>[T,n(" It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the "),I,n(", though the transition does limit overflow. ")]),_:1}),a(e,{title:"Accordion Item #3"},{default:t(()=>[C,n(" It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the "),q,n(", though the transition does limit overflow. ")]),_:1})]),_:1})]),_:1})]),_:1}),x,a(i,null,{default:t(()=>[a(p,{class:"text-dark bg-light"},{default:t(()=>[a(l,{flush:""},{default:t(()=>[a(e,{title:"Accordion Item #1"},{default:t(()=>[n(" Placeholder content for this accordion, which is intended to demonstrate the "),A,n(" property. This is the first item's accordion body. ")]),_:1}),a(e,{title:"Accordion Item #2"},{default:t(()=>[n(" Placeholder content for this accordion, which is intended to demonstrate the "),L,n(" property. This is the second item's accordion body. Let's imagine this being filled with some actual content. ")]),_:1}),a(e,{title:"Accordion Item #3"},{default:t(()=>[n(" Placeholder content for this accordion, which is intended to demonstrate the "),j,n(" property. This is the third item's accordion body. Nothing more exciting happening here in terms of content, but just filling up the space to make it look, at least at first glance, a bit more representative of how this would look in a real-world application. ")]),_:1})]),_:1})]),_:1})]),_:1}),H,a(i,null,{default:t(()=>[a(p,{class:"text-dark"},{default:t(()=>[a(l,{free:""},{default:t(()=>[a(e,{title:"Accordion Item #1"},{default:t(()=>[M,n(" It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the "),Y,n(" slot, though the transition does limit overflow. ")]),_:1}),a(e,{title:"Accordion Item #2"},{default:t(()=>[P,n(" It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the "),N,n(" slot, though the transition does limit overflow. ")]),_:1}),a(e,{title:"Accordion Item #3"},{default:t(()=>[B,n(" It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the "),E,n(" slot, though the transition does limit overflow. ")]),_:1})]),_:1})]),_:1})]),_:1}),V,a(i,null,{default:t(()=>[a(d)]),_:1})])}var D=r(k,[["render",O],["__file","Accordion.html.vue"]]);export{D as default};
