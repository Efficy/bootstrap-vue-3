import{_ as Sn,f as Vn,g as o,h as _,v as Bn,r as l,o as i,c as g,b as n,w as a,a as e,d as m,e as p,t as k,u as q,x as W,y as N,F as T,i as x,p as M,j as B,q as Cn}from"./app.0dac2e22.js";const On="@bootstrap-vue-3/form-tags",jn="Alpha",En={title:"Form Tags",version:"Alpha",description:"Lightweight custom tagged input form control, with options for customized interface rendering, duplicate tag detection and optional tag validation.",components:[{component:"b-form-tags",version:"Alpha",aliases:["BTags"],props:[{prop:"addButtonText",type:"String",default:"Add",description:"Text for the built in 'Add' button. Slot `add-button-text` takes precedence"},{prop:"addButtonVariant",type:"String",default:"outline-secondary",description:"Applies one of the Bootstrap theme color variants to the 'Add' button"},{prop:"addOnChange",type:"Boolean",default:!1,description:"When set, enables adding the tag on the input's 'change' event"},{prop:"duplicateTagText",type:"String",default:"Duplicate tag(s)",description:"The message when duplicate tags are detected. Set to an empty string to disable the message"},{prop:"inputAttrs",type:"Object",description:"Additional attributes to apply to the new tag input element"},{prop:"inputClass",type:["Array","Object","String"],description:"Class (or classes) to apply to the new tag input element"},{prop:"inputId",type:"String",description:"ID to apply to the new tag input element. If not provided, a unique ID will be auto generated"},{prop:"inputType",type:"String",default:"text",description:"Specifies the type of input to use: 'text', 'email', 'tel', 'url', or 'number'. Default is 'text'"},{prop:"invalidTagText",type:"String",default:"Invalid tag(s)",description:"The error message when invalid tags are detected. Set to an empty string to disable the message"},{prop:"form",type:"String",description:"The value of the form prop"},{prop:"limit",type:"Number",description:"The maximum amount of tags that can be added. The limit can still be exceeded if manipulated outside of the component"},{prop:"limitTagsText",type:"String",default:"Tag limit reached",description:"The message when the limit is reached. Set to an empty string to disable the message"},{prop:"name",type:"String",description:"Sets the value of the 'name' attribute on the form control. When set, creates a hidden input for each tag"},{prop:"noAddOnEnter",type:"Boolean",default:!1,description:"When set, disables adding the tag on the input's 'keydown.enter' event"},{prop:"noOuterFocus",type:"Boolean",default:!1,description:"When set, disables the focus styling of the component root element"},{prop:"noTagRemove",type:"Boolean",default:!1,description:"When set, the tags will not have a remove button"},{prop:"placeholder",type:"String",default:"Add tag...",description:"Sets the 'placeholder' attribute value on the form control"},{prop:"removeOnDelete",type:"Boolean",default:!1,description:"When set, enables removal of last tag in tags when user presses delete or backspace and the input is empty"},{prop:"separator",type:["String","Array"],description:"Separator character(s) that will trigger a tag to be created"},{prop:"tagClass",type:["String","Array","Object"],description:"Class (or classes) to apply to the tags"},{prop:"tagPills",type:"Boolean",default:!1,description:"Makes the built in tags have a pill appearance"},{prop:"tagRemoveLabel",type:"String",description:"The value of the 'aria-label' attribute on the remove button in the tag"},{prop:"tagValidator",type:"Function",description:"Optional tag validator method. Passed a single argument of tag being added. Should return 'true' if the tag passes validation, or 'false' if the tag cannot be added"},{prop:"tagVariant",type:"String",default:"secondary",description:"Applies one of the Bootstrap theme color variants to the tags"},{prop:"value",type:"Array",default:[],description:"Array of current tags. This is the v-model"}],events:[{event:"blur",description:"Emitted when component loses focus",args:[{arg:"event",type:"FocusEvent",description:"Native blur event (before any formatting)"}]},{event:"focus",description:"Emitted when component gains focus",args:[{arg:"event",type:"FocusEvent",description:"Native focus event (before any formatting)"}]},{event:"focusin",description:"Emitted when internal elements of component gain focus.",args:[{arg:"event",type:"FocusEvent",description:"Native focusin event (before any formatting)"}]},{event:"focusout",description:"Emitted when internal elements of component lose focus.",args:[{arg:"event",type:"FocusEvent",description:"Native focusout event (before any formatting)"}]},{event:"input",description:"Emitted when the tags changes. Updates the v-model",args:[{arg:"value",type:"Array",description:"Array of current tags"}]},{event:"tag-state",description:"Emitted when tags in the user input are parsed",args:[{arg:"validTags",type:"Array",description:"Array of new tag(s) added (or that will be added). Will be zero length if no tags added"},{arg:"invalidTags",type:"Array",description:"Array of tag(s) that cannot be added because they did not pass validation. Will be zero length if no invalid tags"},{arg:"duplicateTags",type:"Array",description:"Array of tag(s) that cannot be added because they would be a duplicate tag. Will be zero length if no duplicate tags"}]}],slots:[{name:"add-button-text",description:"Content to place in the built in  'Add' button. Takes precedence over the 'add-button-text' prop. Not used when the default scoped slot is provided"},{name:"default",description:"Slot to override the default rendering of the tags component",scope:[{prop:"addButtonText",type:"String",description:"Value of the 'add-button-text' prop"},{prop:"addButtonVariant",type:"String",description:"Value of the 'add-button-variant' prop"},{prop:"addTag",type:"Function",description:"Method to add a new tag. Assumes the tag is the value of the input, but optionally accepts one argument which is the tag value to be added"},{prop:"disableAddButton",type:"Boolean",description:"Will be `true` if the tag(s) in the input cannot be added (all invalid and/or duplicates)"},{prop:"disabled",type:"Boolean",description:"If the component is in the disabled state. Value of the 'disabled' prop"},{prop:"duplicateTagText",type:"String",description:"The value of the 'duplicate-tag-text' prop"},{prop:"duplicateTags",type:"Array",description:"Array of duplicate tag(s) that could not be added"},{prop:"form",type:"String",description:"Value of the 'form' prop"},{prop:"inputAttrs",type:"Object",description:`Object of attributes to apply to native input elements via 'v-bind="inputAttrs"'`},{prop:"inputClass",type:["String","Array","Object"],description:"Class (or classes) to apply to the new tag input element. Value of the 'input-class' prop"},{prop:"inputHandlers",type:"Object",description:`Object of event handlers to apply to native input elements via 'v-on="inputHandlers"'`},{prop:"inputId",type:"String",description:"ID to add to the new tag input element. Defaults to prop 'input-id'. If not provided a unique ID is auto-generated. Also available via 'inputAttrs.id'"},{prop:"inputType",description:"The type of input to use: 'type', 'email', 'tel', 'url', or 'number'. Default is 'text'. Normalized value of the 'input-type' prop"},{prop:"invalidTagText",type:"String",description:"The value of the 'invalid-tag-text' prop"},{prop:"invalidTags",type:"Array",description:"Array of invalid tag(s) that could not be added. Requires a validator function via the 'tag-validator' prop"},{prop:"isDuplicate",type:"Boolean",description:"Will be `true` if the user has attempted to add duplicate tag(s)"},{prop:"isInvalid",type:"Boolean",description:"Will be `true` if the input has invalid tag(s). Requires a validator function via the 'tag-validator' prop"},{prop:"isLimitReached",type:"Boolean",description:"Will be `true` if the input has reached the maximum amount of tags defined by the 'limit' prop"},{prop:"limitTagsText",type:"String",description:"The value of the 'limit-tag-text' prop"},{prop:"noTagRemove",type:"Boolean",description:"The value of the 'no-tag-remove' prop"},{prop:"placeholder",type:"String",description:"The value of the 'placeholder' prop"},{prop:"remove",type:"Function",description:"Method to fully reset the tags input"},{prop:"removeTag",type:"Function",description:"Method to remove a tag. Accepts one argument which is the tag value to remove"},{prop:"required",type:"Boolean",description:"Value of the 'required' prop"},{prop:"separator",type:["String","Array"],description:"The value of the 'separator' prop"},{prop:"size",type:"String",description:"The value of the 'size' prop"},{prop:"state",type:"Boolean",description:"The contextual state of the component. Value of the 'state' prop. Possible values are true, false or null"},{prop:"tagClass",type:["String","Array","Object"],description:"Class (or classes) to apply to the tag elements. Value of the 'tag-class' prop"},{prop:"tagPills",type:"Boolean",description:"Value of the `tag-pills` prop"},{prop:"tagRemoveLabel",type:"String",description:"ARIA label for the remove button on tags. Value of the 'tag-remove-label' prop"},{prop:"tagVariant",type:"String",description:"Value of the 'tag-variant' prop"},{prop:"tags",type:"Array",description:"Array of tags to render"}]}]},{component:"b-form-tag",version:"Alpha",description:"Helper component for custom rending of tags in tagged input",aliases:["BTag"],props:[{prop:"noRemove",type:"Boolean",default:!1,description:"When set, the tag will not have a remove button"},{prop:"pill",type:"Boolean",default:!1,description:"Makes the tag have a pill appearance"},{prop:"removeLabel",type:"String",default:"Remove tag",description:"The value of the 'aria-label' attribute on the remove button in the tag"},{prop:"title",type:"String",description:"Value to place in the 'title' attribute of the tag. Will also be used for the tag content if no default slot provided"},{prop:"variant",type:"String",default:"secondary",description:"Applies one of the Bootstrap theme color variants to the component"}],events:[{event:"remove",description:"Emitted when the remove button is clicked"}],slots:[{name:"default",description:"Content to place in the tag. Overrides the `title` prop"}]}]};var In={name:On,version:jn,meta:En};const zn=m('<h1 id="form-tags" tabindex="-1"><a class="header-anchor" href="#form-tags" aria-hidden="true">#</a> Form Tags</h1><p>Lightweight custom tagged input form control, with options for customized interface rendering, duplicate tag detection and optional tag validation.</p><p>Tags are arrays of short strings, used in various ways such as assigning categories. Use the default user interface, or create your own custom interface via the use of the default scoped slot.</p><h2 id="basic-usage" tabindex="-1"><a class="header-anchor" href="#basic-usage" aria-hidden="true">#</a> Basic usage</h2><p>Tags will have any leading and tailing whitespace removed, and duplicate tags are not permitted. Tags that contain spaces are permitted by default.</p><p>Tags are added by clicking the <strong>Add</strong> button, pressing the Enter key or optionally when the <code>change</code> event fires on the new tag input (i.e. when focus moves from the input). The <strong>Add</strong> button will only appear when the user has entered a new tag value.</p><p><strong>Default render:</strong></p>',7),Dn=e("label",{for:"tags-basic"},"Type a new tag and press enter",-1),Fn={class:"mt-2"},Pn=m(`<div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tags-basic<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Type a new tag and press enter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-form-tags</span> <span class="token attr-name">input-id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tags-basic<span class="token punctuation">&quot;</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>value<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-form-tags</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mt-2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Value: {{ value }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">import</span> <span class="token punctuation">{</span>ref<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>

  <span class="token keyword">const</span> value <span class="token operator">=</span> ref<span class="token operator">&lt;</span>string<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;apple&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;orange&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>You can disable adding a new tag when pressing <kbd>Enter</kbd> via the <code>no-add-on-enter</code> prop, and enable adding a tag on the input&#39;s <code>change</code> event via the <code>add-on-change</code> prop.</p><h2 id="tag-creation-using-separators" tabindex="-1"><a class="header-anchor" href="#tag-creation-using-separators" aria-hidden="true">#</a> Tag creation using separators</h2><p>To auto create tags when a separator character is typed (i.e. <kbd>Space</kbd>, <kbd>,</kbd>, etc.), set the <code>separator</code> prop to the character that will trigger the tag to be added. If multiple separator characters are needed, then include them as a single string (i.e. <code>&#39; ,;&#39;</code>), or an array of characters (i.e. <code>[&#39; &#39;, &#39;,&#39;, &#39;;&#39;]</code>), which will trigger a new tag to be added when <kbd>Space</kbd>, <kbd>,</kbd>, or <kbd>;</kbd> are typed). Separators must be a single character.</p><p>The following example will auto create a tag when <kbd>Space</kbd>, <kbd>,</kbd>, or <kbd>;</kbd> are typed:</p>`,5),Ln=e("label",{for:"tags-separators"},"Enter tags separated by space, comma or semicolon",-1),Rn={class:"mt-2"},Un=m(`<div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tags-separators<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Enter tags separated by space, comma or semicolon<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-form-tags</span>
    <span class="token attr-name">input-id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tags-separators<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>value<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">separator</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span> ,;<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Enter new tags separated by space, comma or semicolon<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">no-add-on-enter</span>
  <span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-form-tags</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mt-2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Value: {{ value }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">import</span> <span class="token punctuation">{</span>ref<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>

  <span class="token keyword">const</span> value <span class="token operator">=</span> ref<span class="token operator">&lt;</span>string<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;one&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;two&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="last-tag-removal-via-backspace-keypress" tabindex="-1"><a class="header-anchor" href="#last-tag-removal-via-backspace-keypress" aria-hidden="true">#</a> Last tag removal via backspace keypress</h2><p>When the prop <code>remove-on-delete</code> is set, and the user presses <kbd>Backspace</kbd> (or <kbd>Del</kbd>) and the input value is empty, the last tag in the tag list will be removed.</p>`,3),Hn=e("label",{for:"tags-remove-on-delete"},"Enter new tags separated by space",-1),$n=p(" Press "),Wn=e("kbd",null,"Backspace",-1),Nn=p(" to remove the last tag entered "),Mn=m(`<div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tags-remove-on-delete<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Enter new tags separated by space<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-form-tags</span>
    <span class="token attr-name">input-id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tags-remove-on-delete<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">:input-attrs</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{<span class="token punctuation">&#39;</span>aria-describedby<span class="token punctuation">&#39;</span>: <span class="token punctuation">&#39;</span>tags-remove-on-delete-help<span class="token punctuation">&#39;</span>}<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>value<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">separator</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span> <span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Enter new tags separated by space<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">remove-on-delete</span>
    <span class="token attr-name">no-add-on-enter</span>
  <span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-form-tags</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-form-text</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tags-remove-on-delete-help<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mt-2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    Press <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>kbd</span><span class="token punctuation">&gt;</span></span>Backspace<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>kbd</span><span class="token punctuation">&gt;</span></span> to remove the last tag entered
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-form-text</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>Value: {{ value }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">import</span> <span class="token punctuation">{</span>ref<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>

  <span class="token keyword">const</span> value <span class="token operator">=</span> ref<span class="token operator">&lt;</span>string<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;apple&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;orange&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;grape&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="styling-options" tabindex="-1"><a class="header-anchor" href="#styling-options" aria-hidden="true">#</a> Styling Options</h2><p>Several props are available to alter the basic styling of the default tagged interface:</p><table><thead><tr><th>Prop</th><th>Description</th></tr></thead><tbody><tr><td><code>tag-pills</code></td><td>Renders the tags with the appearance of pills</td></tr><tr><td><code>tag-variant</code></td><td>Applies one of the Bootstrap contextual variant theme colors to the tags</td></tr><tr><td><code>size</code></td><td>Set the size of the component&#39;s appearance. &#39;sm&#39;, &#39;md&#39; (default), or &#39;lg&#39;</td></tr><tr><td><code>placeholder</code></td><td>The placeholder text for the new tag input element</td></tr><tr><td><code>state</code></td><td>Sets the contextual state of the control. Set to <code>true</code> (for valid), <code>false</code> (for invalid), or <code>null</code></td></tr><tr><td><code>disabled</code></td><td>Places the component in a disabled state</td></tr></tbody></table><p>For additional props, see the component reference section at the bottom of this page.</p><p>The focus and validation state styling of the component relies upon BootstrapVue&#39;s custom CSS.</p><h2 id="using-with-native-browser-form-submission" tabindex="-1"><a class="header-anchor" href="#using-with-native-browser-form-submission" aria-hidden="true">#</a> Using with native browser <code>&lt;form&gt;</code> submission</h2><p>The value of the tagged input will not be submitted via standard form <code>action</code> unless you provide a <code>name</code> via the name prop. When a name is provided, <code>&lt;b-form-tags&gt;</code> will create a hidden <code>&lt;input&gt;</code> for each tag. The hidden input will have the name attribute set to the value of the name prop.</p><p>The hidden inputs will also be generated when using <a href="#custom-rendering-with-default-scoped-slot">custom rendering</a> (when the <code>name</code> prop is set).</p><h2 id="tag-validation" tabindex="-1"><a class="header-anchor" href="#tag-validation" aria-hidden="true">#</a> Tag validation</h2><p>By default, <code>&lt;b-form-tags&gt;</code> detects when the user is attempting to enter a (case-sensitive) duplicate tag, and will provide integrated feedback to the user.</p><p>You can optionally provide a tag validator method via the <code>tag-validator</code> prop. The validator function will receive one argument which is the tag being added, and should return either <code>true</code> if the tag passes validation and can be added, or <code>false</code> if the tag fails validation (in which case it is not added to the array of tags). Integrated feedback will be provided to the user listing the invalid tag(s) that could not be added.</p><p>Tag validation occurs only for tags added via user input. Changes to the tags via the <code>v-model</code> are not validated.</p>`,13),Yn=p(" You must provide at least 3 tags and no more than 8 "),Gn=e("div",{id:"tags-validation-help"}," Tags must be 3 to 5 characters in length and all lower case. Enter tags separated by spaces or press enter. ",-1),Jn=m(`<div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-form-group</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Tags validation example<span class="token punctuation">&quot;</span></span> <span class="token attr-name">label-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tags-validation<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:state</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>state<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-form-tags</span>
      <span class="token attr-name">input-id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tags-validation<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tags<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">:input-attrs</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{<span class="token punctuation">&#39;</span>aria-describedby<span class="token punctuation">&#39;</span>: <span class="token punctuation">&#39;</span>tags-validation-help<span class="token punctuation">&#39;</span>}<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">:tag-validator</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tagValidator<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">:state</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>state<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">separator</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span> <span class="token punctuation">&quot;</span></span>
    <span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-form-tags</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#invalid-feedback</span><span class="token punctuation">&gt;</span></span> You must provide at least 3 tags and no more than 8 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#description</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tags-validation-help<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        Tags must be 3 to 5 characters in length and all lower case. Enter tags separated by spaces
        or press enter.
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-form-group</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">import</span> <span class="token punctuation">{</span>ref<span class="token punctuation">,</span> computed<span class="token punctuation">,</span> watch<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>

  <span class="token keyword">const</span> tags <span class="token operator">=</span> ref<span class="token operator">&lt;</span>string<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> dirty <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span>

  <span class="token keyword">const</span> state <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
    dirty<span class="token punctuation">.</span>value <span class="token operator">?</span> tags<span class="token punctuation">.</span>value<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">2</span> <span class="token operator">&amp;&amp;</span> tags<span class="token punctuation">.</span>value<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> <span class="token number">9</span> <span class="token operator">:</span> <span class="token keyword">null</span>
  <span class="token punctuation">)</span>

  <span class="token function">watch</span><span class="token punctuation">(</span>tags<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>dirty<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

  <span class="token keyword">function</span> <span class="token function">tagValidator</span><span class="token punctuation">(</span><span class="token parameter">tag</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> tag <span class="token operator">===</span> tag<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> tag<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">2</span> <span class="token operator">&amp;&amp;</span> tag<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> <span class="token number">6</span>
  <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="detecting-new-invalid-and-duplicate-tags" tabindex="-1"><a class="header-anchor" href="#detecting-new-invalid-and-duplicate-tags" aria-hidden="true">#</a> Detecting new, invalid, and duplicate tags</h2><p>The event <code>tag-state</code> will be emitted whenever new tags are entered into the new tag input element, tags that do not pass validation, or duplicate tags are detected. The event handler will receive three arrays as its arguments:</p><ul><li><code>validTags</code> (tags that pass validation)</li><li><code>invalidTags</code> (tags that do not pass validation)</li><li><code>duplicateTags</code> (tags that would be a duplicate of existing or validTags).</li></ul><p>The event will be emitted only when the new tag input changes (characters are entered that would be considered part of a tag), or when the user attempts to add a tag (i.e. via <kbd>Enter</kbd>, clicking the <strong>Add</strong> button, or entering a separator). The three arrays will be empty when the user clears the new tag input element (or contains just spaces).</p><p>If you are providing your own feedback for duplicate and invalid tags (via the use of the <code>tag-state</code> event) outside of the <code>&lt;b-form-tags&gt;</code> component, you can disable the built in duplicate and invalid messages by setting the props <code>duplicate-tag-text</code> and <code>invalid-tag-text</code> (respectively) to either an empty string (<code>&#39;&#39;</code>) or <code>null</code>.</p>`,6),Kn=e("label",{for:"tags-state-event"},"Enter tags",-1),Qn={class:"mt-2"},Xn=e("p",null,"Event values:",-1),Zn=m(`<div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tags-state-event<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Enter tags<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-form-tags</span>
    <span class="token attr-name">input-id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tags-state-event<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tags<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">:tag-validator</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>validator<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Enter tags (3-5 characters) separated by space<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">separator</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span> <span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">@tag-state</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>onTagState<span class="token punctuation">&quot;</span></span>
  <span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-form-tags</span><span class="token punctuation">&gt;</span></span>

  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mt-2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Tags: {{ tags }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>Event values:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>validTags: {{ validTags }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>invalidTags: {{ invalidTags }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>duplicateTags: {{ duplicateTags }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">import</span> <span class="token punctuation">{</span>ref<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>

  <span class="token keyword">const</span> tags <span class="token operator">=</span> ref<span class="token operator">&lt;</span>string<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> validTags <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> invalidTags <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> duplicateTags <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

  <span class="token keyword">function</span> <span class="token function">onTagState</span><span class="token punctuation">(</span><span class="token parameter">valid<span class="token punctuation">,</span> invalid<span class="token punctuation">,</span> duplicate</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    validTags<span class="token punctuation">.</span>value <span class="token operator">=</span> valid
    invalidTags<span class="token punctuation">.</span>value <span class="token operator">=</span> invalid
    duplicateTags<span class="token punctuation">.</span>value <span class="token operator">=</span> duplicate
  <span class="token punctuation">}</span>

  <span class="token keyword">function</span> <span class="token function">validator</span><span class="token punctuation">(</span><span class="token parameter">tag</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> tag<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">2</span> <span class="token operator">&amp;&amp;</span> tag<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> <span class="token number">6</span>
  <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="limiting-tags" tabindex="-1"><a class="header-anchor" href="#limiting-tags" aria-hidden="true">#</a> Limiting tags</h2><p>If you want to limit the amount of tags the user is able to add use the <code>limit</code> prop. When configured, adding more tags than the <code>limit</code> allows is only possible by the <code>v-model</code>.</p><p>When the limit of tags is reached, the user is still able to type but adding more tags is disabled. A message is shown to give the user feedback about the reached limit. This message can be configured by the <code>limit-tags-text</code> prop. Setting it to either an empty string (<code>&#39;&#39;</code>) or <code>null</code> will disable the feedback.</p><p>Removing tags is unaffected by the <code>limit</code> prop.</p>`,5),na=e("label",{for:"tags-limit"},"Enter tags",-1),aa={class:"mt-2"},sa=m(`<div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tags-limit<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Enter tags<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-form-tags</span> <span class="token attr-name">input-id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tags-limit<span class="token punctuation">&quot;</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>value<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:limit</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>limit<span class="token punctuation">&quot;</span></span> <span class="token attr-name">remove-on-delete</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-form-tags</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mt-2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Value: {{ value }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">import</span> <span class="token punctuation">{</span>ref<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>

  <span class="token keyword">const</span> value <span class="token operator">=</span> ref<span class="token operator">&lt;</span>string<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> limit <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="custom-rendering-with-default-scoped-slot" tabindex="-1"><a class="header-anchor" href="#custom-rendering-with-default-scoped-slot" aria-hidden="true">#</a> Custom rendering with default scoped slot</h2><p>If you fancy a different look and feel for the tags control, you can provide your own custom rendering via the default scoped slot. You can either create your own tags, or use our helper <code>&lt;b-form-tag&gt;</code> component.</p><h2 id="scope-properties" tabindex="-1"><a class="header-anchor" href="#scope-properties" aria-hidden="true">#</a> Scope properties</h2><p>The default scoped slot provides numerous properties and methods for use in rendering your custom interface. Not all properties or methods are required to generate your interface.</p><p>The default slot scope properties are as follows:</p><table><thead><tr><th>Property</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>addButtonText</code></td><td>String</td><td>The value of the <code>add-button-text</code> prop</td></tr><tr><td><code>addButtonVariant</code></td><td>String</td><td>The value of the <code>add-button-variant</code> prop</td></tr><tr><td><code>addTag</code></td><td>Function</td><td>Method to add a new tag. Assumes the tag is the value of the input, but optionally accepts one argument which is the tag value to be added</td></tr><tr><td><code>disableAddButton</code></td><td>Boolean</td><td>Will be <code>true</code> if the tag(s) in the input cannot be added (all invalid and/or duplicates)</td></tr><tr><td><code>disabled</code></td><td>Boolean</td><td><code>true</code> if the component is in the disabled state. Value of the <code>disabled</code> prop</td></tr><tr><td><code>duplicateTagText</code></td><td>String</td><td>The value of the <code>duplicate-tag-text</code> prop</td></tr><tr><td><code>duplicateTags</code></td><td>Array</td><td>Array of the duplicate tag(s) the user has entered</td></tr><tr><td><code>form</code></td><td>String</td><td>The value of the <code>form</code> prop</td></tr><tr><td><code>inputAttrs</code></td><td>Object</td><td>Object of attributes to apply to the new tag input element via <code>v-bind=&quot;inputAttrs&quot;</code>. See below for details</td></tr><tr><td><code>inputHandlers</code></td><td>Object</td><td>Object of event handlers to apply to the new tag input element via <code>v-on=&quot;inputHandlers&quot;</code>. See below for details</td></tr><tr><td><code>inputId</code></td><td>String</td><td>ID to add to the new tag input element. Defaults to prop <code>input-id</code>. If not provided a unique ID is auto-generated. Also available via &#39;inputAttrs.id&#39;</td></tr><tr><td><code>inputType</code></td><td>String</td><td>Type of input to render (normalized version of prop <code>input-type</code>)</td></tr><tr><td><code>invalidTagText</code></td><td>String</td><td>The value of the <code>invalid-tag-text</code> prop</td></tr><tr><td><code>invalidTags</code></td><td>Array</td><td>Array of the invalid tag(s) the user has entered</td></tr><tr><td><code>isDuplicate</code></td><td>Boolean</td><td><code>true</code> if the user input contains duplicate tag(s)</td></tr><tr><td><code>isInvalid</code></td><td>Boolean</td><td><code>true</code> if the user input contains invalid tag(s)</td></tr><tr><td><code>isLimitReached</code></td><td>Boolean</td><td><code>true</code> if a <code>limit</code> is configured and the amount of tags has reached the limit</td></tr><tr><td><code>limitTagsText</code></td><td>String</td><td>The value of the <code>limit-tags-text</code> prop</td></tr><tr><td><code>limit</code></td><td>String</td><td>The value of the <code>limit</code> prop</td></tr><tr><td><code>noTagRemove</code></td><td>Boolean</td><td>The value of the <code>no-tag-remove</code> prop</td></tr><tr><td><code>placeholder</code></td><td>String</td><td>The value of the <code>placeholder</code> prop</td></tr><tr><td><code>removeTag</code></td><td>Function</td><td>Method to remove a tag. Accepts one argument which is the tag value to remove</td></tr><tr><td><code>required</code></td><td>Boolean</td><td>The value of the <code>required</code> prop</td></tr><tr><td><code>separator</code></td><td>String</td><td>The value of the <code>separator</code> prop</td></tr><tr><td><code>size</code></td><td>String</td><td>The value of the <code>size</code> prop</td></tr><tr><td><code>state</code></td><td>Boolean</td><td>The contextual state of the component. Value of the <code>state</code> prop. Possible values are <code>true</code>, <code>false</code> or <code>null</code></td></tr><tr><td><code>tagClass</code></td><td>String, Array, or Object</td><td>The value of the <code>tag-variant</code> prop. Class (or classes) to apply to the tag elements</td></tr><tr><td><code>tagPills</code></td><td>Boolean</td><td>The value of the <code>tag-pills</code> prop</td></tr><tr><td><code>tagRemoveLabel</code></td><td>String</td><td>Value of the <code>tag-remove-label</code> prop. Used as the <code>aria-label</code> attribute on the remove button of tags</td></tr><tr><td><code>tagVariant</code></td><td>String</td><td>The value of the <code>tag-variant</code> prop</td></tr><tr><td><code>tags</code></td><td>Array</td><td>Array of current tag strings</td></tr></tbody></table><h2 id="inputattrs-object-properties" tabindex="-1"><a class="header-anchor" href="#inputattrs-object-properties" aria-hidden="true">#</a> <code>inputAttrs</code> object properties</h2><p>The <code>inputAttrs</code> object contains attributes to bind (v-bind) to the new tag input element.</p><table><thead><tr><th>Property</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>disabled</code></td><td>Boolean</td><td>The <code>disabled</code> attribute for the new tag input. Value of the <code>disabled</code> prop</td></tr><tr><td><code>form</code></td><td>String</td><td>The <code>form</code> attribute for the new tag input. Value of the <code>form</code> prop</td></tr><tr><td><code>id</code></td><td>String</td><td>The <code>id</code> attribute for the new tag input</td></tr><tr><td><code>value</code></td><td>String</td><td>The <code>value</code> attribute for the new tag input</td></tr></tbody></table><p>The <code>inputAttrs</code> object will also include any attributes set via the <code>input-attrs</code> prop. Note that the above attributes take precedence over any of the same attributes specified in the <code>input-attrs</code> prop.</p><h2 id="inputhandlers-object-properties" tabindex="-1"><a class="header-anchor" href="#inputhandlers-object-properties" aria-hidden="true">#</a> <code>inputHandlers</code> object properties</h2><p>The <code>inputHandlers</code> object contains event handlers to bind (<code>v-on</code>) to the new tag input element.</p><table><thead><tr><th>Property</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>change</code></td><td>Function</td><td>Event handler for the input element <code>change</code> event. Accepts a single argument of either an event object or a string. Change will trigger adding the tag.</td></tr><tr><td><code>input</code></td><td>Function</td><td>Event handler for the input element <code>input</code> event. Accepts a single argument of either an event object or a string. Updates the internal v-model for the new tag input element</td></tr><tr><td><code>keydown</code></td><td>Function</td><td>Event handler for the input element <code>keydown</code> <kbd>Enter</kbd> and <kbd>Del</kbd> events. Accepts a single argument which is the native keydown event object</td></tr></tbody></table><p>The <code>change</code> handler, when needed, must be enabled via the <code>add-on-change</code> prop, otherwise it is a noop method.</p><h2 id="using-native-browser-inputs" tabindex="-1"><a class="header-anchor" href="#using-native-browser-inputs" aria-hidden="true">#</a> Using native browser inputs</h2><p>The scope contains attributes and event handlers that can be directly bound to native <code>&lt;input&gt;</code> or <code>&lt;select&gt;</code> elements.</p><p>The following example includes the suggested ARIA attributes and roles needed for screen-reader support.</p>`,18),ta=p("Add"),ea={id:"my-custom-tags-list",class:"list-unstyled d-inline-flex flex-wrap mb-0","aria-live":"polite","aria-atomic":"false","aria-relevant":"additions removals"},pa=p("remove"),oa=m(`<div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-form-tags</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>value<span class="token punctuation">&quot;</span></span> <span class="token attr-name">no-outer-focus</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mb-2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#default</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{tags, inputAttrs, inputHandlers, addTag, removeTag}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-input-group</span> <span class="token attr-name">aria-controls</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>my-custom-tags-list<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span>
          <span class="token attr-name">v-bind</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>inputAttrs<span class="token punctuation">&quot;</span></span>
          <span class="token attr-name">v-on</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>inputHandlers<span class="token punctuation">&quot;</span></span>
          <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>New tag - Press enter to add<span class="token punctuation">&quot;</span></span>
          <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-control<span class="token punctuation">&quot;</span></span>
        <span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-input-group-append</span><span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>addTag()<span class="token punctuation">&quot;</span></span> <span class="token attr-name">variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>primary<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Add<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-button</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-input-group-append</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-input-group</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span>
        <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>my-custom-tags-list<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>list-unstyled d-inline-flex flex-wrap mb-0<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">aria-live</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>polite<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">aria-atomic</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>false<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">aria-relevant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>additions removals<span class="token punctuation">&quot;</span></span>
      <span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!-- Always use the tag value as the :key, not the index! --&gt;</span>
        <span class="token comment">&lt;!-- Otherwise screen readers will not read the tag
               additions and removals correctly --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-card</span>
          <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tag in tags<span class="token punctuation">&quot;</span></span>
          <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tag<span class="token punctuation">&quot;</span></span>
          <span class="token attr-name">:id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\`my-custom-tags-tag_\${tag.replace(/\\s/g, <span class="token punctuation">&#39;</span>_<span class="token punctuation">&#39;</span>)}_\`<span class="token punctuation">&quot;</span></span>
          <span class="token attr-name">tag</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>li<span class="token punctuation">&quot;</span></span>
          <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mt-1 mr-1<span class="token punctuation">&quot;</span></span>
          <span class="token attr-name">body-class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>py-1 pr-2 text-nowrap<span class="token punctuation">&quot;</span></span>
        <span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>strong</span><span class="token punctuation">&gt;</span></span>{{ tag }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>strong</span><span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-button</span>
            <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>removeTag(tag)<span class="token punctuation">&quot;</span></span>
            <span class="token attr-name">variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>link<span class="token punctuation">&quot;</span></span>
            <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sm<span class="token punctuation">&quot;</span></span>
            <span class="token attr-name">:aria-controls</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\`my-custom-tags-tag_\${tag.replace(/\\s/g, <span class="token punctuation">&#39;</span>_<span class="token punctuation">&#39;</span>)}_\`<span class="token punctuation">&quot;</span></span>
            <span class="token punctuation">&gt;</span></span>remove<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-button</span>
          <span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-card</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-form-tags</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">import</span> <span class="token punctuation">{</span>ref<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>

  <span class="token keyword">const</span> value <span class="token operator">=</span> ref<span class="token operator">&lt;</span>string<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;apple&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;orange&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;banana&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;pear&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;peach&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="using-custom-form-components" tabindex="-1"><a class="header-anchor" href="#using-custom-form-components" aria-hidden="true">#</a> Using custom form components</h2><p>The scope contains attributes and event handlers that can be directly bound to most custom inputs or select components (the event handlers accept either a string tag value or a native event object). Any component that emits <code>input</code> as characters are typed, and (optionally) emits <code>change</code> when the input value changes (i.e on blur or select), and uses the prop <code>value</code> as the v-model, should work without modification.</p><p>In this example, we are using the <a href="#b-form-tag-helper-component"><code>&lt;b-form-tag&gt;</code> helper component</a>, but feel free to render tags using standard HTML or components.</p>`,4),la=p("Add"),ca={class:"d-inline-block",style:{"font-size":"1.5rem"}},ua=m(`<div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-form-tags</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>value<span class="token punctuation">&quot;</span></span> <span class="token attr-name">no-outer-focus</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mb-2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#default</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{ tags, inputAttrs, inputHandlers, tagVariant, addTag, removeTag }<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-input-group</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mb-2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-form-input</span>
          <span class="token attr-name">v-bind</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>inputAttrs<span class="token punctuation">&quot;</span></span>
          <span class="token attr-name">v-on</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>inputHandlers<span class="token punctuation">&quot;</span></span>
          <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>New tag - Press enter to add<span class="token punctuation">&quot;</span></span>
          <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-control<span class="token punctuation">&quot;</span></span>
        <span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-form-input</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-input-group-append</span><span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>addTag()<span class="token punctuation">&quot;</span></span> <span class="token attr-name">variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>primary<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Add<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-button</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-input-group-append</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-input-group</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>d-inline-block<span class="token punctuation">&quot;</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">font-size</span><span class="token punctuation">:</span> 1.5rem<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-form-tag</span>
          <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tag in tags<span class="token punctuation">&quot;</span></span>
          <span class="token attr-name">@remove</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>removeTag(tag)<span class="token punctuation">&quot;</span></span>
          <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tag<span class="token punctuation">&quot;</span></span>
          <span class="token attr-name">:title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tag<span class="token punctuation">&quot;</span></span>
          <span class="token attr-name">:variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tagVariant<span class="token punctuation">&quot;</span></span>
          <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mr-1<span class="token punctuation">&quot;</span></span>
          <span class="token punctuation">&gt;</span></span>{{ tag }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-form-tag</span>
        <span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-form-tags</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">import</span> <span class="token punctuation">{</span>ref<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>

  <span class="token keyword">const</span> value <span class="token operator">=</span> ref<span class="token operator">&lt;</span>string<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;apple&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;orange&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;banana&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The following is an example of using a custom select component for choosing from a pre-defined set of tags:</p>`,2),ia={key:0,class:"list-inline d-inline-block mb-2"},ra=e("option",{disabled:"",value:""},"Choose a tag...",-1),da=m(`<div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-form-group</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Tagged input using select<span class="token punctuation">&quot;</span></span> <span class="token attr-name">label-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tags-component-select<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- Prop \`add-on-change\` is needed to enable adding tags vie the \`change\` event --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-form-tags</span>
      <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tags-component-select<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>value<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>lg<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mb-2<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">add-on-change</span>
      <span class="token attr-name">no-outer-focus</span>
    <span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#default</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{ tags, inputAttrs, inputHandlers, disabled, removeTag }<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tags.length &gt; 0<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>list-inline d-inline-block mb-2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tag in tags<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tag<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>list-inline-item<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-form-tag</span> <span class="token attr-name">@remove</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>removeTag(tag)<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tag<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:disabled</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>disabled<span class="token punctuation">&quot;</span></span> <span class="token attr-name">variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>info<span class="token punctuation">&quot;</span></span>
              <span class="token punctuation">&gt;</span></span>{{ tag }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-form-tag</span>
            <span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-form-select</span>
          <span class="token attr-name">v-bind</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>inputAttrs<span class="token punctuation">&quot;</span></span>
          <span class="token attr-name">v-on</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>inputHandlers<span class="token punctuation">&quot;</span></span>
          <span class="token attr-name">:disabled</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>disabled || availableOptions.length === 0<span class="token punctuation">&quot;</span></span>
          <span class="token attr-name">:options</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>availableOptions<span class="token punctuation">&quot;</span></span>
        <span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#first</span><span class="token punctuation">&gt;</span></span>
            <span class="token comment">&lt;!-- This is required to prevent bugs with Safari --&gt;</span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">disabled</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Choose a tag...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-form-select</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-form-tags</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-form-group</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">import</span> <span class="token punctuation">{</span>ref<span class="token punctuation">,</span> computed<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>

  <span class="token keyword">const</span> options <span class="token operator">=</span> ref<span class="token operator">&lt;</span>string<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
    <span class="token string">&#39;Apple&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;Orange&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;Banana&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;Lime&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;Peach&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;Chocolate&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;Strawberry&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> value <span class="token operator">=</span> ref<span class="token operator">&lt;</span>string<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

  <span class="token keyword">const</span> availableOptions <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
    options<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">opt</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> value<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>opt<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>
  <span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>If the custom input is using custom event names that mimic <code>input</code> and <code>change</code>, and/or needs the <code>.native</code> modifier for keydown, you can do something similar to below to bind the event handlers:</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#default</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{ inputAttrs, inputHandlers, removeTag, tags }<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>custom-input</span>
    <span class="token attr-name">:id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>inputAttrs.id<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">:vistom-value-prop</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>inputAttrs.value<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">@custom-input-event</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>inputHandlers.input($event)<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">@custom-change-event</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>inputHandlers.change($event)<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">@keydown.native</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>inputHandlers.keydown($event)<span class="token punctuation">&quot;</span></span>
  <span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>custom-input</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tag in tags<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- Your custom tag list here --&gt;</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The <code>inputHandlers.input</code> handler <strong>must</strong> be bound to an event that updates with each character entered by the user for the <em>as-you-type</em> tag validation to work.</p><h2 id="advanced-custom-rendering-usage" tabindex="-1"><a class="header-anchor" href="#advanced-custom-rendering-usage" aria-hidden="true">#</a> Advanced custom rendering usage</h2><p>In situations where the <code>inputHandlers</code> will not work with your custom input, or if you need greater control over tag creation, you can take advantage of the additional properties provided via the default slot&#39;s scope.</p>`,6),ka=p("Disable"),va=p("Add"),ga=p(" Duplicate tag value cannot be added again! "),ma={key:0,class:"mb-0"},ba=["title"],ha={class:"d-flex align-items-center"},fa={class:"mr-2"},qa=p(" remove tag "),ya=p(" There are no tags specified. Add a new tag above. "),wa=m(`<div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-form-checkbox</span> <span class="token attr-name">switch</span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>lg<span class="token punctuation">&quot;</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>disabled<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Disable<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-form-checkbox</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-form-tags</span>
    <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>value<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">@input</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>resetInputValue()<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">tag-variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>success<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mb-2 mt-2<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">:disabled</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>disabled<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">no-outer-focus</span>
    <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Enter a new tag value and click Add<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">:state</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>state<span class="token punctuation">&quot;</span></span>
  <span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">v-slot</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{tags, inputId, placeholder, disabled, addTag, removeTag }<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-input-group</span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!-- Always bind the id to the input so that it can be focused when needed --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-form-input</span>
          <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>newTag<span class="token punctuation">&quot;</span></span>
          <span class="token attr-name">:id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>inputId<span class="token punctuation">&quot;</span></span>
          <span class="token attr-name">:placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>placeholder<span class="token punctuation">&quot;</span></span>
          <span class="token attr-name">:disabled</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>disabled<span class="token punctuation">&quot;</span></span>
          <span class="token attr-name">:formatter</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>formatter<span class="token punctuation">&quot;</span></span>
        <span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-form-input</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-input-group-append</span><span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>addTag(newTag)<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:disabled</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>disabled<span class="token punctuation">&quot;</span></span> <span class="token attr-name">variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>primary<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Add<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-button</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-input-group-append</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-input-group</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-form-invalid-feedback</span> <span class="token attr-name">:state</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>state<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        Duplicate tag value cannot be added again!
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-form-invalid-feedback</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tags.length &gt; 0<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mb-0<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tag in tags<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tag<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\`Tag: \${tag}\`<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mt-2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>d-flex align-items-center<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mr-2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{ tag }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-button</span>
              <span class="token attr-name">:disabled</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>disabled<span class="token punctuation">&quot;</span></span>
              <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sm<span class="token punctuation">&quot;</span></span>
              <span class="token attr-name">variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>outline-danger<span class="token punctuation">&quot;</span></span>
              <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>removeTag(tag)<span class="token punctuation">&quot;</span></span>
            <span class="token punctuation">&gt;</span></span>
              remove tag
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-button</span><span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-form-text</span> <span class="token attr-name">v-else</span><span class="token punctuation">&gt;</span></span> There are no tags specified. Add a new tag above. <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-form-text</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-form-tags</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">import</span> <span class="token punctuation">{</span>ref<span class="token punctuation">,</span> computed<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>

  <span class="token keyword">const</span> newTag <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> disabled <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> value <span class="token operator">=</span> ref<span class="token operator">&lt;</span>string<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

  <span class="token keyword">const</span> state <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>value<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>newTag<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">?</span> <span class="token boolean">false</span> <span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

  <span class="token keyword">function</span> <span class="token function">resetInputValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    newTag<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">function</span> <span class="token function">formatter</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> value<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The following is an example of using the <code>&lt;b-dropdown&gt;</code> component for choosing or searching from a pre-defined set of tags:</p>`,2),_a={key:0,class:"list-inline d-inline-block mb-2"},Ta=p(" Choose tags "),xa=p(" There are no tags available to select "),Aa=m(`<div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-form-group</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Tagged input using dropdown<span class="token punctuation">&quot;</span></span> <span class="token attr-name">label-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tags-with-dropdown<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-form-tags</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tags-with-dropdown<span class="token punctuation">&quot;</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>value<span class="token punctuation">&quot;</span></span> <span class="token attr-name">no-outer-focus</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mb-2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">v-slot</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{ tags, disabled, addTag, removeTag }<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tags.length &gt; 0<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>list-inline d-inline-block mb-2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tag in tags<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tag<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>list-inline-item<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-form-tag</span> <span class="token attr-name">@remove</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>removeTag(tag)<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tag<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:disabled</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>disabled<span class="token punctuation">&quot;</span></span> <span class="token attr-name">variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>info<span class="token punctuation">&quot;</span></span>
              <span class="token punctuation">&gt;</span></span>{{ tag }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-form-tag</span>
            <span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>

        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-dropdown</span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sm<span class="token punctuation">&quot;</span></span> <span class="token attr-name">variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>outline-secondary<span class="token punctuation">&quot;</span></span> <span class="token attr-name">block</span> <span class="token attr-name">menu-class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>w-100<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#button-content</span><span class="token punctuation">&gt;</span></span> Choose tags <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-dropdown-form</span> <span class="token attr-name">@submit.stop.prevent</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>() =&gt; {}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-form-group</span>
              <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Search tags<span class="token punctuation">&quot;</span></span>
              <span class="token attr-name">label-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tag-search-input<span class="token punctuation">&quot;</span></span>
              <span class="token attr-name">label-cols-md</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>auto<span class="token punctuation">&quot;</span></span>
              <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mb-0<span class="token punctuation">&quot;</span></span>
              <span class="token attr-name">label-size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sm<span class="token punctuation">&quot;</span></span>
              <span class="token attr-name">:description</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>searchDesc<span class="token punctuation">&quot;</span></span>
              <span class="token attr-name">:disabled</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>disabled<span class="token punctuation">&quot;</span></span>
            <span class="token punctuation">&gt;</span></span>
              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-form-input</span>
                <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>search<span class="token punctuation">&quot;</span></span>
                <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tag-search-input<span class="token punctuation">&quot;</span></span>
                <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>search<span class="token punctuation">&quot;</span></span>
                <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sm<span class="token punctuation">&quot;</span></span>
                <span class="token attr-name">autocomplete</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>off<span class="token punctuation">&quot;</span></span>
              <span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-form-input</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-form-group</span><span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-dropdown-form</span><span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-dropdown-divider</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-dropdown-divider</span><span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-dropdown-item-button</span>
            <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>option in availableOptions<span class="token punctuation">&quot;</span></span>
            <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>option<span class="token punctuation">&quot;</span></span>
            <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>onOptionClick({ option, addTag })<span class="token punctuation">&quot;</span></span>
          <span class="token punctuation">&gt;</span></span>
            {{ option }}
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-dropdown-item-button</span><span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-dropdown-text</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>availableOptions.length === 0<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            There are no tags available to select
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-dropdown-text</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-dropdown</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-form-tags</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-form-group</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">import</span> <span class="token punctuation">{</span>ref<span class="token punctuation">,</span> computed<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>

  <span class="token keyword">const</span> options <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;Apple&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Orange&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Banana&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Lime&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Peach&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Chocolate&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Strawberry&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> search <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> value <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

  <span class="token keyword">const</span> criteria <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// Compute the search criteria</span>
    <span class="token keyword">return</span> search<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> availableOptions <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// Filter out already selected options</span>
    <span class="token keyword">const</span> options <span class="token operator">=</span> options<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">opt</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> value<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>opt<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>criteria<span class="token punctuation">.</span>value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// Show only options that match criteria</span>
      <span class="token keyword">return</span> options<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">opt</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> opt<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>criteria<span class="token punctuation">.</span>value<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// Show all options available</span>
    <span class="token keyword">return</span> options
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

  <span class="token keyword">const</span> searchDesc <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>criteria<span class="token punctuation">.</span>value <span class="token operator">&amp;&amp;</span> availableOptions<span class="token punctuation">.</span>value<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token string">&#39;There are no tags matching your search criteria&#39;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> <span class="token string">&#39;&#39;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

  <span class="token keyword">function</span> <span class="token function">onOptionClick</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span>option<span class="token punctuation">,</span> addTag<span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">addTag</span><span class="token punctuation">(</span>option<span class="token punctuation">)</span>
    search<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>
  <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="creating-wrapper-components" tabindex="-1"><a class="header-anchor" href="#creating-wrapper-components" aria-hidden="true">#</a> Creating wrapper components</h2><p>You can easily create a custom wrapper component with your preferred rendering style as follows:</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-form-tags</span> <span class="token attr-name">:value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>value<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@input</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>$emit(<span class="token punctuation">&#39;</span>input<span class="token punctuation">&#39;</span>, $event)<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#default</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{ tags, addTag, removeTag, inputAttrs, inputHandlers }<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token comment">&lt;!-- Place your custom rendering here --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-form-tags</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">import</span> <span class="token punctuation">{</span>BFormTags<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;bootstrap-vue-3&#39;</span>

  <span class="token function">defineProps</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token literal-property property">type</span><span class="token operator">:</span> Array<span class="token punctuation">,</span> <span class="token function-variable function">default</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="b-form-tag-helper-component" tabindex="-1"><a class="header-anchor" href="#b-form-tag-helper-component" aria-hidden="true">#</a> <code>&lt;b-form-tag&gt;</code> helper component</h2>`,5),Sa=p("BootstrapVue provides the helper component "),Va=e("code",null,"<b-form-tag>",-1),Ba=p(", for use with the default scoped slot of "),Ca=e("code",null,"<b-form-tags>",-1),Oa=p(". The component is based upon "),ja=e("code",null,"<b-badge>",-1),Ea=p(" and "),Ia=e("code",null,"<b-button-close>",-1),za=p("."),Da=m("<p><code>&lt;b-form-tag&gt;</code> supports the same variants as <code>&lt;b-badge&gt;</code> and also supports <code>pill</code> styling. Sizing is based on the containing element&#39;s font-size.</p><p>The remove event is emitted when the <code>&lt;b-form-tag&gt;</code> remove button is clicked.</p><p>Tags that are too wide for their parent container will automatically have their text content truncated with an ellipsis. For this reason, it is always good practice to supply a title via the title prop when using the default slot of <code>&lt;b-form-tag&gt;</code> for the tag content.</p><p>Note <code>&lt;b-form-tag&gt;</code> requires BootstrapVue3&#39;s custom CSS/SCSS for proper styling.</p>",4),Fa=Vn({__name:"FormTags.html",setup(Pa){const w=o(["apple","orange"]),j=o(["one","two"]),E=o(["apple","orange","grape"]),A=o([]),Y=o(!1),I=_(()=>Y.value?A.value.length>2&&A.value.length<9:null);Bn(A,()=>Y.value=!1);function on(c){return c===c.toLowerCase()&&c.length>2&&c.length<6}const z=o([]),G=o([]),J=o([]),K=o([]);function ln(c,s,v){G.value=c,J.value=s,K.value=v}function cn(c){return c.length>2&&c.length<6}const D=o([]),un=o(5),Q=o(["apple","orange","banana","pear","peach"]),X=o(["apple","orange","banana"]),Z=o(["Apple","Orange","Banana","Lime","Peach","Chocolate","Strawberry"]),nn=o([]),an=_(()=>Z.value.filter(c=>w.value.indexOf(c)===-1)),S=o(""),F=o(!1),sn=o([]),rn=_(()=>w.value.indexOf(S.value.trim())>-1?!1:null);function dn(){S.value=""}function kn(c){return c.value.toUpperCase()}o(["Apple","Orange","Banana","Lime","Peach","Chocolate","Strawberry"]);const C=o(""),tn=o([]),P=_(()=>C.value.trim().toLowerCase()),L=_(()=>{const c=Z.value.filter(s=>w.value.indexOf(s)===-1);return P.value?c.filter(s=>s.toLowerCase().indexOf(P.value)>-1):c}),vn=_(()=>P.value&&L.value.length===0?"There are no tags matching your search criteria":"");function gn({option:c,addTag:s}){s(c),C.value=""}return(c,s)=>{const v=l("b-form-tags"),b=l("ClientOnly"),en=l("b-form-text"),O=l("b-form-group"),V=l("b-button"),R=l("b-input-group-append"),U=l("b-input-group"),mn=l("b-card"),H=l("b-form-input"),$=l("b-form-tag"),bn=l("b-form-select"),hn=l("b-form-checkbox"),fn=l("b-form-invalid-feedback"),qn=l("b-dropdown-form"),yn=l("b-dropdown-divider"),wn=l("b-dropdown-item-button"),_n=l("b-dropdown-text"),Tn=l("b-dropdown"),pn=l("RouterLink"),xn=l("doc-reference");return i(),g("div",null,[zn,n(b,null,{default:a(()=>[Dn,n(v,{"input-id":"tags-basic",modelValue:w.value,"onUpdate:modelValue":s[0]||(s[0]=t=>w.value=t)},null,8,["modelValue"]),e("p",Fn,"Value: "+k(w.value),1)]),_:1}),Pn,n(b,null,{default:a(()=>[Ln,n(v,{"input-id":"tags-separators",modelValue:j.value,"onUpdate:modelValue":s[1]||(s[1]=t=>j.value=t),separator:" ,;",placeholder:"Enter new tags separated by space, comma or semicolon","no-add-on-enter":""},null,8,["modelValue"]),e("p",Rn,"Value: "+k(j.value),1)]),_:1}),Un,n(b,null,{default:a(()=>[Hn,n(v,{"input-id":"tags-remove-on-delete","input-attrs":{"aria-describedby":"tags-remove-on-delete-help"},modelValue:E.value,"onUpdate:modelValue":s[2]||(s[2]=t=>E.value=t),separator:" ",placeholder:"Enter new tags separated by space","remove-on-delete":"","no-add-on-enter":""},null,8,["modelValue"]),n(en,{id:"tags-remove-on-delete-help",class:"mt-2"},{default:a(()=>[$n,Wn,Nn]),_:1}),e("p",null,"Value: "+k(E.value),1)]),_:1}),Mn,n(b,null,{default:a(()=>[n(O,{label:"Tags validation example","label-for":"tags-validation",state:q(I)},{"invalid-feedback":a(()=>[Yn]),description:a(()=>[Gn]),default:a(()=>[n(v,{"input-id":"tags-validation",modelValue:A.value,"onUpdate:modelValue":s[3]||(s[3]=t=>A.value=t),"input-attrs":{"aria-describedby":"tags-validation-help"},"tag-validator":on,state:q(I),separator:" "},null,8,["modelValue","state"])]),_:1},8,["state"])]),_:1}),Jn,n(b,null,{default:a(()=>[Kn,n(v,{"input-id":"tags-state-event",modelValue:z.value,"onUpdate:modelValue":s[4]||(s[4]=t=>z.value=t),"tag-validator":cn,placeholder:"Enter tags (3-5 characters) separated by space",separator:" ",onTagState:ln},null,8,["modelValue"]),e("p",Qn,"Tags: "+k(z.value),1),Xn,e("ul",null,[e("li",null,"validTags: "+k(G.value),1),e("li",null,"invalidTags: "+k(J.value),1),e("li",null,"duplicateTags: "+k(K.value),1)])]),_:1}),Zn,n(b,null,{default:a(()=>[na,n(v,{"input-id":"tags-limit",modelValue:D.value,"onUpdate:modelValue":s[5]||(s[5]=t=>D.value=t),limit:un.value,"remove-on-delete":""},null,8,["modelValue","limit"]),e("p",aa,"Value: "+k(D.value),1)]),_:1}),sa,n(b,null,{default:a(()=>[n(v,{modelValue:Q.value,"onUpdate:modelValue":s[6]||(s[6]=t=>Q.value=t),"no-outer-focus":"",class:"mb-2"},{default:a(({tags:t,inputAttrs:f,inputHandlers:y,addTag:h,removeTag:u})=>[n(U,{"aria-controls":"my-custom-tags-list"},{default:a(()=>[e("input",W(f,N(y),{placeholder:"New tag - Press enter to add",class:"form-control"}),null,16),n(R,null,{default:a(()=>[n(V,{onClick:r=>h(),variant:"primary"},{default:a(()=>[ta]),_:2},1032,["onClick"])]),_:2},1024)]),_:2},1024),e("ul",ea,[(i(!0),g(T,null,x(t,r=>(i(),B(mn,{key:r,id:`my-custom-tags-tag_${r.replace(/\s/g,"_")}_`,tag:"li",class:"mt-1 mr-1","body-class":"py-1 pr-2 text-nowrap"},{default:a(()=>[e("strong",null,k(r),1),n(V,{onClick:d=>u(r),variant:"link",size:"sm","aria-controls":`my-custom-tags-tag_${r.replace(/\s/g,"_")}_`},{default:a(()=>[pa]),_:2},1032,["onClick","aria-controls"])]),_:2},1032,["id"]))),128))])]),_:1},8,["modelValue"])]),_:1}),oa,n(b,null,{default:a(()=>[n(v,{modelValue:X.value,"onUpdate:modelValue":s[7]||(s[7]=t=>X.value=t),"no-outer-focus":"",class:"mb-2"},{default:a(({tags:t,inputAttrs:f,inputHandlers:y,tagVariant:h,addTag:u,removeTag:r})=>[n(U,{class:"mb-2"},{default:a(()=>[n(H,W(f,N(y),{placeholder:"New tag - Press enter to add",class:"form-control"}),null,16),n(R,null,{default:a(()=>[n(V,{onClick:d=>u(),variant:"primary"},{default:a(()=>[la]),_:2},1032,["onClick"])]),_:2},1024)]),_:2},1024),e("div",ca,[(i(!0),g(T,null,x(t,d=>(i(),B($,{onRemove:An=>r(d),key:d,title:d,variant:h,class:"mr-1"},{default:a(()=>[p(k(d),1)]),_:2},1032,["onRemove","title","variant"]))),128))])]),_:1},8,["modelValue"])]),_:1}),ua,n(b,null,{default:a(()=>[n(O,{label:"Tagged input using select","label-for":"tags-component-select"},{default:a(()=>[n(v,{id:"tags-component-select",modelValue:nn.value,"onUpdate:modelValue":s[8]||(s[8]=t=>nn.value=t),size:"lg",class:"mb-2","add-on-change":"","no-outer-focus":""},{default:a(({tags:t,inputAttrs:f,inputHandlers:y,disabled:h,removeTag:u})=>[t.length>0?(i(),g("ul",ia,[(i(!0),g(T,null,x(t,r=>(i(),g("li",{key:r,class:"list-inline-item"},[n($,{onRemove:d=>u(r),title:r,disabled:h,variant:"info"},{default:a(()=>[p(k(r),1)]),_:2},1032,["onRemove","title","disabled"])]))),128))])):M("",!0),n(bn,W(f,N(y),{disabled:h||q(an).length===0,options:q(an)}),{first:a(()=>[ra]),_:2},1040,["disabled","options"])]),_:1},8,["modelValue"])]),_:1})]),_:1}),da,n(b,null,{default:a(()=>[n(hn,{switch:"",size:"lg",modelValue:F.value,"onUpdate:modelValue":s[9]||(s[9]=t=>F.value=t)},{default:a(()=>[ka]),_:1},8,["modelValue"]),n(v,{modelValue:sn.value,"onUpdate:modelValue":s[11]||(s[11]=t=>sn.value=t),onInput:s[12]||(s[12]=t=>dn()),"tag-variant":"success",class:"mb-2 mt-2",disabled:F.value,"no-outer-focus":"",placeholder:"Enter a new tag value and click Add",state:q(rn)},{default:a(({tags:t,inputId:f,placeholder:y,disabled:h,addTag:u,removeTag:r})=>[n(U,null,{default:a(()=>[n(H,{modelValue:S.value,"onUpdate:modelValue":s[10]||(s[10]=d=>S.value=d),id:f,placeholder:y,disabled:h,formatter:kn},null,8,["modelValue","id","placeholder","disabled"]),n(R,null,{default:a(()=>[n(V,{onClick:d=>u(S.value),disabled:h,variant:"primary"},{default:a(()=>[va]),_:2},1032,["onClick","disabled"])]),_:2},1024)]),_:2},1024),n(fn,{state:q(I)},{default:a(()=>[ga]),_:1},8,["state"]),t.length>0?(i(),g("ul",ma,[(i(!0),g(T,null,x(t,d=>(i(),g("li",{key:d,title:`Tag: ${d}`,class:"mt-2"},[e("span",ha,[e("span",fa,k(d),1),n(V,{disabled:h,size:"sm",variant:"outline-danger",onClick:An=>r(d)},{default:a(()=>[qa]),_:2},1032,["disabled","onClick"])])],8,ba))),128))])):(i(),B(en,{key:1},{default:a(()=>[ya]),_:1}))]),_:1},8,["modelValue","disabled","state"])]),_:1}),wa,n(b,null,{default:a(()=>[n(O,{label:"Tagged input using dropdown","label-for":"tags-with-dropdown"},{default:a(()=>[n(v,{id:"tags-with-dropdown",modelValue:tn.value,"onUpdate:modelValue":s[15]||(s[15]=t=>tn.value=t),"no-outer-focus":"",class:"mb-2"},{default:a(({tags:t,disabled:f,addTag:y,removeTag:h})=>[t.length>0?(i(),g("ul",_a,[(i(!0),g(T,null,x(t,u=>(i(),g("li",{key:u,class:"list-inline-item"},[n($,{onRemove:r=>h(u),title:u,disabled:f,variant:"info"},{default:a(()=>[p(k(u),1)]),_:2},1032,["onRemove","title","disabled"])]))),128))])):M("",!0),n(Tn,{size:"sm",variant:"outline-secondary",block:"","menu-class":"w-100"},{"button-content":a(()=>[Ta]),default:a(()=>[n(qn,{onSubmit:s[14]||(s[14]=Cn(()=>{},["stop","prevent"]))},{default:a(()=>[n(O,{label:"Search tags","label-for":"tag-search-input","label-cols-md":"auto",class:"mb-0","label-size":"sm",description:q(vn),disabled:f},{default:a(()=>[n(H,{modelValue:C.value,"onUpdate:modelValue":s[13]||(s[13]=u=>C.value=u),id:"tag-search-input",type:"search",size:"sm",autocomplete:"off"},null,8,["modelValue"])]),_:2},1032,["description","disabled"])]),_:2},1024),n(yn),(i(!0),g(T,null,x(q(L),u=>(i(),B(wn,{key:u,onClick:r=>gn({option:u,addTag:y})},{default:a(()=>[p(k(u),1)]),_:2},1032,["onClick"]))),128)),q(L).length===0?(i(),B(_n,{key:0},{default:a(()=>[xa]),_:1})):M("",!0)]),_:2},1024)]),_:1},8,["modelValue"])]),_:1})]),_:1}),Aa,e("p",null,[Sa,Va,Ba,Ca,Oa,n(pn,{to:"/components/Badge.html"},{default:a(()=>[ja]),_:1}),Ea,n(pn,{to:"/components/ButtonClose.html"},{default:a(()=>[Ia]),_:1}),za]),Da,n(b,null,{default:a(()=>[n(xn,{reference:q(In)},null,8,["reference"])]),_:1})])}}});var Ra=Sn(Fa,[["__file","FormTags.html.vue"]]);export{Ra as default};
