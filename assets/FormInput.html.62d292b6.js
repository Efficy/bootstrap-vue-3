import{_ as F,f as U,g as d,h as W,o as T,c as I,d as n,w as a,a as s,b as e,e as c,r as i,t as m,F as j,i as A,u as B}from"./app.a76928ef.js";const M=c('<h1 id="form-input" tabindex="-1"><a class="header-anchor" href="#form-input" aria-hidden="true">#</a> Form Input</h1><blockquote><p>Create various type inputs such as: <code>text</code>, <code>password</code>, <code>number</code>, <code>url</code>, <code>email</code>, <code>search</code>, <code>range</code>, <code>date</code> and more.</p></blockquote>',2),D={class:"mt-2"},Y=c(`<div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-card</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-form-input</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>selectedText<span class="token punctuation">&quot;</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Enter your name<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-form-input</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mt-2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Value: {{ selectedText }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-card</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">import</span> <span class="token punctuation">{</span>ref<span class="token punctuation">,</span> computed<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>

  <span class="token keyword">const</span> selectedText <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="input-type" tabindex="-1"><a class="header-anchor" href="#input-type" aria-hidden="true">#</a> Input type</h2><p><code>&lt;b-form-input&gt;</code> defaults to a <code>text</code> input, but you can set the <code>type</code> prop to one of the supported native browser HTML5 types: <code>text</code>, <code>password</code>, <code>email</code>, <code>number</code>, <code>url</code>, <code>tel</code>, <code>search</code>, <code>date</code>, <code>datetime</code>, <code>datetime-local</code>, <code>month</code>, <code>week</code>, <code>time</code>, <code>range</code>, or <code>color</code>.</p>`,3),H=["for"],O=c(`<div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-card</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-row</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>my-1<span class="token punctuation">&quot;</span></span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>type in inputTypes<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>type<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-col</span> <span class="token attr-name">sm</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>3<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">:for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\`type-\${type}\`<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Type <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>code</span><span class="token punctuation">&gt;</span></span>{{ type }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>code</span><span class="token punctuation">&gt;</span></span>:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-col</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-col</span> <span class="token attr-name">sm</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>9<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-form-input</span> <span class="token attr-name">:id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\`type-\${type}\`<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>type<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-form-input</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-col</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-row</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-card</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">import</span> <span class="token punctuation">{</span>ref<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>

  <span class="token keyword">const</span> inputTypes <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token string">&#39;text&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;number&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;email&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;password&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;search&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;url&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;tel&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;date&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;time&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;range&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;color&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>If the <code>type</code> prop is set to an input type that is not supported (see above), a <code>text</code> input will be rendered and a console warning will be issued.</p><p><strong>Caveats with input types:</strong></p>`,3),$={href:"https://caniuse.com/?search=input",target:"_blank",rel:"noopener noreferrer"},G=c("<li>Browsers that do not support a particular type will fall back to a <code>text</code> input type (even though the rendered <code>type</code> attribute markup shows the requested type).</li><li>No testing is performed to see if the requested input type is supported by the browser.</li><li>Chrome lost support for <code>datetime</code> in version 26, Opera in version 15, and Safari in iOS 7. Instead of using <code>datetime</code>, since support should be deprecated, use <code>date</code> and <code>time</code> as two separate inputs.</li><li><code>date</code> and <code>time</code> inputs are native browser types, and are not a custom date/time picker.</li><li>For date and time style inputs, where supported, the displayed value in the GUI may be different from what is returned by its value (i.e. ordering of year-month-date).</li><li>Regardless of input type, the value is <strong>always</strong> returned as a string representation.</li><li><code>v-model.lazy</code> is not supported by <code>&lt;b-form-input&gt;</code> (nor any custom Vue component). Use the <code>lazy</code> prop instead.</li><li><code>v-model</code> modifiers <code>.number</code> and <code>.trim</code> can cause unexpected cursor jumps when the user is typing (this is a Vue issue with <code>v-model</code> on custom components). <em>Avoid using these modifiers</em>. Use the <code>number</code> or <code>trim</code> props instead.</li><li>Older version of Firefox may not support <code>readonly</code> for <code>range</code> type inputs.</li><li>Input types that do not support <code>min</code>, <code>max</code> and <code>step</code> (i.e. <code>text</code>, <code>password</code>, <code>tel</code>, <code>email</code>, <code>url</code>, etc.) will silently ignore these values (although they will still be rendered on the input markup) if values are provided.</li>",10),P=c('<p><strong>Caveats with predictive text entry and IME composition entry:</strong></p><ul><li>When using predictive text auto-suggested words, the <code>v-model</code> will not update until the auto-suggested word is selected (or a space is typed). If an auto suggested word is not selected, the v-model will update with the current <em>displayed text</em> of the input when the input is blurred.</li><li>When using IME composition (ie. Chinese, Japanese, etc.), the <code>v-model</code> will not update until the IME composition is completed.</li></ul><h3 id="range-type-input" tabindex="-1"><a class="header-anchor" href="#range-type-input" aria-hidden="true">#</a> Range type input</h3><p>Inputs with type <code>range</code> render using Bootstrap v5&#39;s <code>.custom-range</code> class. The track (the background) and thumb (the value) are both styled to appear the same across browsers.</p><p>Range inputs have implicit values for <code>min</code> and <code>max</code> of <code>0</code> and <code>100</code> respectively. You may specify new values for those using the <code>min</code> and <code>max</code> props.</p>',5),J=s("label",{for:"range-1"},"Example range with min and max",-1),K={class:"mt-2"},Q=c(`<div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-card</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>range-1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Example range with min and max<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-form-input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>range-1<span class="token punctuation">&quot;</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>rangeValue<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>range<span class="token punctuation">&quot;</span></span> <span class="token attr-name">min</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>0<span class="token punctuation">&quot;</span></span> <span class="token attr-name">max</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>5<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-form-input</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mt-2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Value: {{ rangeValue }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-card</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">import</span> <span class="token punctuation">{</span>ref<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>

  <span class="token keyword">const</span> rangeValue <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">&#39;2&#39;</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>By default, range inputs &quot;snap&quot; to integer values. To change this, you can specify a <code>step</code> value. In the example below, we double the number of steps by using step=&quot;0.5&quot;.</p>`,2),X=s("label",{for:"range-1"},"Example range with min and max",-1),Z={class:"mt-2"},nn=c(`<div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-card</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>range-1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Example range with min and max<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-form-input</span>
      <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>range-1<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>rangeValueStep<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>range<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">min</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>0<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">max</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>5<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">step</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>0.5<span class="token punctuation">&quot;</span></span>
    <span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-form-input</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mt-2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Value: {{ rangeValueStep }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-card</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">import</span> <span class="token punctuation">{</span>ref<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>

  <span class="token keyword">const</span> rangeValueStep <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">&#39;2&#39;</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Note:</strong> Range inputs (as do all input types) return their value as a string. You may need to convert the value to a native number by using <code>Number(value)</code>, <code>parseInt(value, 10)</code>, <code>parseFloat(value)</code>, or use the <code>number</code> prop.</p><p><s><strong>Note:</strong> Bootstrap v5 CSS does not include styling for range inputs inside input groups, nor validation styling on range inputs. However, Bootstrap-Vue-3 includes custom styling to handle these situations until styling is included in Bootstrap v5.</s></p><h2 id="control-sizing" tabindex="-1"><a class="header-anchor" href="#control-sizing" aria-hidden="true">#</a> Control sizing</h2><p>Set heights using the <code>size</code> prop to <code>sm</code> or <code>lg</code> for small or large respectively.</p><p>To control width, place the input inside standard Bootstrap grid column.</p>`,6),an=s("label",{for:"input-small"},"Small:",-1),sn=s("label",{for:"input-default"},"Default:",-1),tn=s("label",{for:"input-large"},"Large:",-1),en=c(`<div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-card</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-row</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>my-1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-col</span> <span class="token attr-name">sm</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>input-small<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Small:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-col</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-col</span> <span class="token attr-name">sm</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>10<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-form-input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>input-small<span class="token punctuation">&quot;</span></span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sm<span class="token punctuation">&quot;</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Enter your name<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-form-input</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-col</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-row</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-row</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>my-1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-col</span> <span class="token attr-name">sm</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>input-default<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Default:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-col</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-col</span> <span class="token attr-name">sm</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>10<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-form-input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>input-default<span class="token punctuation">&quot;</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Enter your name<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-form-input</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-col</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-row</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-row</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>my-1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-col</span> <span class="token attr-name">sm</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>input-large<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Large:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-col</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-col</span> <span class="token attr-name">sm</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>10<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-form-input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>input-large<span class="token punctuation">&quot;</span></span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>lg<span class="token punctuation">&quot;</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Enter your name<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-form-input</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-col</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-row</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-card</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><s><strong>Note:</strong> Input type <code>range</code> currently does not support control sizing unless it is placed inside a <code>&lt;b-input-group&gt;</code> which has its <code>size</code> prop set.</s></p><p><strong>Note:</strong> The native HTML <code>&lt;input&gt;</code> attribute <code>size</code> (which sets a horizontal width on the <code>&lt;input&gt;</code> in characters) is not supported. Use styling, utility classes, or the layout rows (<code>&lt;b-row&gt;</code>) and columns (<code>&lt;b-col&gt;</code>) to set the desired width.</p><h2 id="contextual-states" tabindex="-1"><a class="header-anchor" href="#contextual-states" aria-hidden="true">#</a> Contextual states</h2><p>Bootstrap includes validation styles for <code>valid</code> and <code>invalid</code> states on most form controls.</p><p>Generally speaking, you&#39;ll want to use a particular state for specific types of feedback:</p><ul><li><code>false</code> (denotes invalid state) is great for when there&#39;s a blocking or required field. A user must fill in this field properly to submit the form.</li><li><code>true</code> (denotes valid state) is ideal for situations when you have per-field validation throughout a form and want to encourage a user through the rest of the fields.</li><li><code>null</code> Displays no validation state (neither valid nor invalid)</li></ul><p>To apply one of the contextual state icons on <code>&lt;b-form-input&gt;</code>, set the <code>state</code> prop to <code>false</code> (for invalid), <code>true</code> (for valid), or <code>null</code> (no validation state).</p>`,8),pn=s("label",{for:"input-none"},"No State:",-1),on=s("label",{for:"input-valid"},"Valid State:",-1),ln=s("label",{for:"input-invalid"},"Invalid State:",-1),cn=c(`<div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-card</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-row</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>my-1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-col</span> <span class="token attr-name">sm</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>3<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>input-none<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>No State:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-col</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-col</span> <span class="token attr-name">sm</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>9<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-form-input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>input-none<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:state</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>null<span class="token punctuation">&quot;</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>No validation<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-form-input</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-col</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-row</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-row</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>my-1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-col</span> <span class="token attr-name">sm</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>3<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>input-valid<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Valid State:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-col</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-col</span> <span class="token attr-name">sm</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>9<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-form-input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>input-valid<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:state</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Valid input<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-form-input</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-col</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-row</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-row</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>my-1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-col</span> <span class="token attr-name">sm</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>3<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>input-invalid<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Invalid State:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-col</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-col</span> <span class="token attr-name">sm</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>9<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-form-input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>input-invalid<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:state</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>false<span class="token punctuation">&quot;</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Invalid input<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-form-input</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-col</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-row</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-card</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Live Example</strong></p>`,2),un={role:"group"},rn=s("label",{for:"input-live"},"Name:",-1),dn=c(`<div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-card</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">role</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>input-live<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Name:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-form-input</span>
        <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>input-live<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>lifeName<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">:state</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>lifeNameState<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">aria-describedby</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>input-live-help input-live-feedback<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Enter your name<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">trim</span>
      <span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-form-input</span><span class="token punctuation">&gt;</span></span>
      <span class="token comment">&lt;!-- This will only be shown if the preceding input has an invalid state --&gt;</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-form-invalid-feedback</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>input-live-feedback<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        Enter at least 3 letters
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-form-invalid-feedback</span><span class="token punctuation">&gt;</span></span>
      <span class="token comment">&lt;!-- This is a form text block (formerly known as help block) --&gt;</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-form-text</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>input-live-help<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Your full name.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-form-text</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-card</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">import</span> <span class="token punctuation">{</span>ref<span class="token punctuation">,</span> computed<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>

  <span class="token keyword">const</span> lifeName <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> lifeNameState <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>lifeName<span class="token punctuation">.</span>value<span class="token operator">?.</span>length <span class="token operator">&gt;</span> <span class="token number">2</span> <span class="token operator">?</span> <span class="token boolean">true</span> <span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),kn=s("strong",null,"Tip:",-1),mn={href:"/docs/components/form-group",target:"_blank",rel:"noopener noreferrer"},vn=s("code",null,"<b-form-group>",-1),gn=c('<h3 id="conveying-contextual-state-to-assistive-technologies-and-colorblind-users" tabindex="-1"><a class="header-anchor" href="#conveying-contextual-state-to-assistive-technologies-and-colorblind-users" aria-hidden="true">#</a> Conveying contextual state to assistive technologies and colorblind users</h3><p>Using these contextual states to denote the state of a form control only provides a visual, color-based indication, which will not be conveyed to users of assistive technologies - such as screen readers - or to colorblind users.</p><p>Ensure that an alternative indication of state is also provided. For instance, you could include a hint about state in the form control&#39;s <code>&lt;label&gt;</code> text itself, or by providing an additional help text block.</p><h3 id="aria-aria-invalid-attribute" tabindex="-1"><a class="header-anchor" href="#aria-aria-invalid-attribute" aria-hidden="true">#</a> ARIA <code>aria-invalid</code> attribute</h3><p>Specifically for assistive technologies, invalid form controls can also be assigned an <code>aria-invalid=&quot;true&quot;</code> attribute.</p><p>When <code>&lt;b-form-input&gt;</code> has an invalid contextual state (i.e. state is <code>false</code>) you may also want to set the <code>&lt;b-form-input&gt;</code> prop <code>aria-invalid</code> to <code>true</code>, or to one of the supported values:</p><ul><li><code>false</code>: Convey no errors detected (default)</li><li><code>true</code> (or <code>&#39;true&#39;</code>): Convey that the value has failed validation.</li><li><code>&#39;grammar&#39;</code> Convey that a grammatical error has been detected.</li><li><code>&#39;spelling&#39;</code> Convey that a spelling error has been detected.</li></ul><p>If <code>aria-invalid</code> is not explicitly set and <code>state</code> is set to <code>false</code>, then the <code>aria-invalid</code> attribute on the input will automatically be set to <code>&#39;true&#39;</code>;</p><h2 id="formatter-support" tabindex="-1"><a class="header-anchor" href="#formatter-support" aria-hidden="true">#</a> Formatter support</h2><p><code>&lt;b-form-input&gt;</code> optionally supports formatting by passing a function reference to the <code>formatter</code> prop.</p><p>Formatting (when a formatter function is supplied) occurs when the control&#39;s native <code>input</code> and <code>change</code> events fire. You can use the boolean prop <code>lazy-formatter</code> to restrict the formatter function to being called on the control&#39;s native <code>blur</code> event.</p><p>The <code>formatter</code> function receives two arguments: the raw <code>value</code> of the input element, and the native <code>event</code> object that triggered the format (if available).</p><p>The <code>formatter</code> function should return the formatted value as a <em>string</em>.</p><p>Formatting does not occur if a <code>formatter</code> is not provided.</p>',14),bn={role:"group"},hn=s("label",{for:"input-formatter"},'"Text input with formatter (on input)"',-1),fn=s("b",null,"Value:",-1),qn={role:"group"},yn=s("label",{for:"input-formatter"},'"Text input with lazy formatter (on blur)"',-1),_n=s("b",null,"Value:",-1),wn=c(`<div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-card</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">role</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>input-formatter<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>&quot;Text input with formatter (on input)&quot;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-form-input</span>
        <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>input-formatter<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>formatInputText<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Enter your name<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">:formatter</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>toLowerCaseFormatter<span class="token punctuation">&quot;</span></span>
      <span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-form-input</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b</span><span class="token punctuation">&gt;</span></span>Value:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b</span><span class="token punctuation">&gt;</span></span> {{ formatInputText }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">role</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>input-formatter<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>&quot;Text input with lazy formatter (on blur)&quot;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-form-input</span>
        <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>input-lazy<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>formatLazyInputText<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Enter your name<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">lazy-formatter</span>
        <span class="token attr-name">:formatter</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>toLowerCaseFormatter<span class="token punctuation">&quot;</span></span>
      <span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-form-input</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b</span><span class="token punctuation">&gt;</span></span>Value:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b</span><span class="token punctuation">&gt;</span></span> {{ formatLazyInputText }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-card</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">import</span> <span class="token punctuation">{</span>ref<span class="token punctuation">,</span> computed<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>

  <span class="token keyword">const</span> formatInputText <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> formatLazyInputText <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> <span class="token function-variable function">toLowerCaseFormatter</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">value</span><span class="token operator">:</span> string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> value<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Note:</strong> When using a non-text-like input (i.e. <code>color</code>, <code>range</code>, <code>date</code>, <code>number</code>, <code>email</code> etc.), ensure that your formatter function returns the value in the expected format (<code>date</code> -&gt; &#39;2000-06-01&#39;, <code>color</code> -&gt; &#39;#ff0000&#39;, etc.) for the input type. The formatter <strong>must</strong> return the value as a <em>string</em>.</p><p><strong>Note:</strong> With non-lazy formatting, if the cursor is not at the end of the input value, the cursor may jump to the end <em>after</em> a character is typed. You can use the provided event object and the <code>event.target</code> to access the native input&#39;s selection methods and properties to control where the insertion point is. This is left as an exercise for the reader.</p><h2 id="readonly-plain-text" tabindex="-1"><a class="header-anchor" href="#readonly-plain-text" aria-hidden="true">#</a> Readonly plain text</h2><p>If you want to have <code>&lt;b-form-input readonly&gt;</code> elements in your form styled as plain text, set the <code>plaintext</code> prop (no need to set <code>readonly</code>) to remove the default form field styling and preserve the correct margin and padding.</p><p>The <code>plaintext</code> option is not supported by input types <code>color</code> or <code>range</code>.</p><h2 id="disabling-mousewheel-events-on-numeric-like-inputs" tabindex="-1"><a class="header-anchor" href="#disabling-mousewheel-events-on-numeric-like-inputs" aria-hidden="true">#</a> <s>Disabling mousewheel events on numeric-like inputs</s></h2><h2 id="datalist-support" tabindex="-1"><a class="header-anchor" href="#datalist-support" aria-hidden="true">#</a> <s>Datalist support</s></h2><h2 id="v-model-modifiers" tabindex="-1"><a class="header-anchor" href="#v-model-modifiers" aria-hidden="true">#</a> <code>v-model</code> modifiers</h2><p>Vue does not officially support <code>.lazy</code>, <code>.trim</code>, and <code>.number</code> modifiers on the <code>v-model</code> of custom component based inputs, and may generate a bad user experience. Avoid using Vue&#39;s native modifiers.</p><p>To get around this, <code>&lt;b-form-input&gt;</code> has three boolean props <code>trim</code>, <code>number</code>, and <code>lazy</code> which emulate the native Vue <code>v-model</code> modifiers <code>.trim</code> and <code>.number</code> and <code>.lazy</code> respectively. The <code>lazy</code> prop will update the v-model on <code>change</code>/<code>blur</code>events.</p><p><strong>Notes:</strong></p><ul><li>The <code>number</code> prop takes precedence over the <code>trim</code> prop (i.e. <code>trim</code> will have no effect when <code>number</code> is set).</li><li>When using the <code>number</code> prop, and if the value can be parsed as a number (via <code>parseFloat</code>) it will return a value of type <code>Number</code> to the <code>v-model</code>, otherwise the original input value is returned as type <code>String</code>. This is the same behaviour as the native <code>.number</code> modifier.</li><li>The <code>trim</code> and <code>number</code> modifier props do not affect the value returned by the <code>input</code> or <code>change</code> events. These events will always return the string value of the content of <code>&lt;textarea&gt;</code> after optional formatting (which may not match the value returned via the <code>v-model</code> <code>update</code> event, which handles the modifiers).</li></ul><h2 id="debounce-support" tabindex="-1"><a class="header-anchor" href="#debounce-support" aria-hidden="true">#</a> <s>Debounce support</s></h2><h2 id="autofocus" tabindex="-1"><a class="header-anchor" href="#autofocus" aria-hidden="true">#</a> Autofocus</h2><p>When the <code>autofocus</code> prop is set, the input will be auto-focused when it is inserted (i.e. <strong>mounted</strong>) into the document, or re-activated when inside a Vue <code>&lt;keep-alive&gt;</code> component. Note that this prop <strong>does not</strong> set the <code>autofocus</code> attribute on the input, nor can it tell when the input becomes visible.</p><h2 id="native-and-custom-events" tabindex="-1"><a class="header-anchor" href="#native-and-custom-events" aria-hidden="true">#</a> Native and custom events</h2><p>All native events (other than the custom <code>input</code> and <code>change</code> events) are supported, without the need for the <code>.native</code> modifier.</p><p>The custom <code>input</code> and <code>change</code> events receive a single argument of the current <code>value</code> (after any formatting has been applied), and are triggered by user interaction.</p><p>The custom <code>update</code> event is passed the input value, and is emitted whenever the <code>v-model</code> needs updating (it is emitted before <code>input</code>, <code>change</code>. and <code>blur</code> as needed).</p><p>You can always access the native <code>input</code> and <code>change</code> events by using the <code>.native</code> modifier.</p><h2 id="exposed-input-properties-and-methods" tabindex="-1"><a class="header-anchor" href="#exposed-input-properties-and-methods" aria-hidden="true">#</a> Exposed input properties and methods</h2><p><code>&lt;b-form-input&gt;</code> exposes the native input element on the component reference as a reference with name &#39;input&#39;. You can use that reference to access the native properties and methods.</p><h3 id="input-properties" tabindex="-1"><a class="header-anchor" href="#input-properties" aria-hidden="true">#</a> Input properties</h3><table><thead><tr><th>Property</th><th>Notes</th></tr></thead><tbody><tr><td><code>.selectionStart</code></td><td>Read/Write</td></tr><tr><td><code>.selectionEnd</code></td><td>Read/Write</td></tr><tr><td><code>.selectionDirection</code></td><td>Read/Write</td></tr><tr><td><code>.validity</code></td><td>Read only</td></tr><tr><td><code>.validationMessage</code></td><td>Read only</td></tr><tr><td><code>.willValidate</code></td><td>Read only</td></tr></tbody></table><h3 id="input-methods" tabindex="-1"><a class="header-anchor" href="#input-methods" aria-hidden="true">#</a> Input methods</h3><table><thead><tr><th>Method</th><th>Notes</th></tr></thead><tbody><tr><td><code>.focus()</code></td><td>Focus the input</td></tr><tr><td><code>.blur()</code></td><td>Remove focus from the input</td></tr><tr><td><code>.select()</code></td><td>Selects all text within the input</td></tr><tr><td><code>.setSelectionRange()</code></td><td></td></tr><tr><td><code>.setRangeText()</code></td><td></td></tr><tr><td><code>.setCustomValidity()</code></td><td></td></tr><tr><td><code>.checkValidity()</code></td><td></td></tr><tr><td><code>.reportValidity()</code></td><td></td></tr></tbody></table>`,27),xn={href:"https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement",target:"_blank",rel:"noopener noreferrer"},Vn={role:"group"},Tn={class:"mt-2"},In=c(`<div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-card</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">role</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-form-input</span>
        <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>inputRef<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sampleInputText<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Enter your name<span class="token punctuation">&quot;</span></span>
      <span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-form-input</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mt-2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-button</span> <span class="token attr-name">primary</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>selectAllText<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Select all text<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-button</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-card</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">import</span> <span class="token punctuation">{</span>ref<span class="token punctuation">,</span> computed<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>

  <span class="token comment">// refs are unified in vue3. We need a ref variable with the same as used in the template.</span>
  <span class="token comment">// The variable will be filled up during mount with the reference to custom component.</span>
  <span class="token comment">// inputRef will become the reference to the b-form-input component.</span>
  <span class="token keyword">const</span> inputRef <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> sampleInputText <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">&#39;sample text&#39;</span><span class="token punctuation">)</span>

  <span class="token comment">// The inner native input is exposed as ref with name &quot;input&quot;</span>
  <span class="token keyword">const</span> <span class="token function-variable function">selectAllText</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> inputRef<span class="token punctuation">.</span>value<span class="token punctuation">.</span>input<span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),En=U({__name:"FormInput.html",setup(Nn){const g=d(""),E=["text","number","email","password","search","url","tel","date","time","range","color"],b=d("2"),h=d("2"),f=d(""),N=W(()=>{var v;return((v=f.value)==null?void 0:v.length)>2}),q=d(""),y=d(""),w=v=>v.toLowerCase(),x=d(null),V=d("sample text"),z=()=>x.value.input.select();return(v,p)=>{const o=i("b-form-input"),r=i("b-card"),u=i("ClientOnly"),l=i("b-col"),k=i("b-row"),_=i("ExternalLinkIcon"),S=i("b-form-invalid-feedback"),C=i("b-form-text"),R=i("b-button"),L=i("ComponentReference");return T(),I("div",null,[M,n(u,null,{default:a(()=>[n(r,null,{default:a(()=>[n(o,{modelValue:g.value,"onUpdate:modelValue":p[0]||(p[0]=t=>g.value=t),placeholder:"Enter your name"},null,8,["modelValue"]),s("div",D,"Value: "+m(g.value),1)]),_:1})]),_:1}),Y,n(u,null,{default:a(()=>[n(r,null,{default:a(()=>[(T(),I(j,null,A(E,t=>n(k,{class:"my-1",key:t},{default:a(()=>[n(l,{sm:"3"},{default:a(()=>[s("label",{for:`type-${t}`},[e("Type "),s("code",null,m(t),1),e(":")],8,H)]),_:2},1024),n(l,{sm:"9"},{default:a(()=>[n(o,{id:`type-${t}`,type:t},null,8,["id","type"])]),_:2},1024)]),_:2},1024)),64))]),_:1})]),_:1}),O,s("ul",null,[s("li",null,[e("Not all browsers support all input types, nor do some types render in the same format across browser types/versions. Refer to "),s("a",$,[e("Can I use"),n(_)]),e(".")]),G]),P,n(u,null,{default:a(()=>[n(r,null,{default:a(()=>[J,n(o,{id:"range-1",modelValue:b.value,"onUpdate:modelValue":p[1]||(p[1]=t=>b.value=t),type:"range",min:"0",max:"5"},null,8,["modelValue"]),s("div",K,"Value: "+m(b.value),1)]),_:1})]),_:1}),Q,n(u,null,{default:a(()=>[n(r,null,{default:a(()=>[X,n(o,{id:"range-1",modelValue:h.value,"onUpdate:modelValue":p[2]||(p[2]=t=>h.value=t),type:"range",min:"0",max:"5",step:"0.5"},null,8,["modelValue"]),s("div",Z,"Value: "+m(h.value),1)]),_:1})]),_:1}),nn,n(u,null,{default:a(()=>[n(r,null,{default:a(()=>[n(k,{class:"my-1"},{default:a(()=>[n(l,{sm:"2"},{default:a(()=>[an]),_:1}),n(l,{sm:"10"},{default:a(()=>[n(o,{id:"input-small",size:"sm",placeholder:"Enter your name"})]),_:1})]),_:1}),n(k,{class:"my-1"},{default:a(()=>[n(l,{sm:"2"},{default:a(()=>[sn]),_:1}),n(l,{sm:"10"},{default:a(()=>[n(o,{id:"input-default",placeholder:"Enter your name"})]),_:1})]),_:1}),n(k,{class:"my-1"},{default:a(()=>[n(l,{sm:"2"},{default:a(()=>[tn]),_:1}),n(l,{sm:"10"},{default:a(()=>[n(o,{id:"input-large",size:"lg",placeholder:"Enter your name"})]),_:1})]),_:1})]),_:1})]),_:1}),en,n(u,null,{default:a(()=>[n(r,null,{default:a(()=>[n(k,{class:"my-1"},{default:a(()=>[n(l,{sm:"3"},{default:a(()=>[pn]),_:1}),n(l,{sm:"9"},{default:a(()=>[n(o,{id:"input-none",state:null,placeholder:"No validation"})]),_:1})]),_:1}),n(k,{class:"my-1"},{default:a(()=>[n(l,{sm:"3"},{default:a(()=>[on]),_:1}),n(l,{sm:"9"},{default:a(()=>[n(o,{id:"input-valid",state:!0,placeholder:"Valid input"})]),_:1})]),_:1}),n(k,{class:"my-1"},{default:a(()=>[n(l,{sm:"3"},{default:a(()=>[ln]),_:1}),n(l,{sm:"9"},{default:a(()=>[n(o,{id:"input-invalid",state:!1,placeholder:"Invalid input"})]),_:1})]),_:1})]),_:1})]),_:1}),cn,n(u,null,{default:a(()=>[n(r,null,{default:a(()=>[s("div",un,[rn,n(o,{id:"input-live",modelValue:f.value,"onUpdate:modelValue":p[3]||(p[3]=t=>f.value=t),state:B(N),"aria-describedby":"input-live-help input-live-feedback",placeholder:"Enter your name",trim:""},null,8,["modelValue","state"]),n(S,{id:"input-live-feedback"},{default:a(()=>[e(" Enter at least 3 letters ")]),_:1}),n(C,{id:"input-live-help"},{default:a(()=>[e("Your full name.")]),_:1})])]),_:1})]),_:1}),dn,s("blockquote",null,[s("p",null,[kn,e(" Use the "),s("a",mn,[vn,n(_)]),e(" component to automatically generate markup similar to above.")])]),gn,n(u,null,{default:a(()=>[n(r,null,{default:a(()=>[s("div",bn,[hn,n(o,{id:"input-formatter",modelValue:q.value,"onUpdate:modelValue":p[4]||(p[4]=t=>q.value=t),placeholder:"Enter your name",formatter:w},null,8,["modelValue"]),s("p",null,[fn,e(" "+m(q.value),1)])]),s("div",qn,[yn,n(o,{id:"input-lazy",modelValue:y.value,"onUpdate:modelValue":p[5]||(p[5]=t=>y.value=t),placeholder:"Enter your name","lazy-formatter":"",formatter:w},null,8,["modelValue"]),s("p",null,[_n,e(" "+m(y.value),1)])])]),_:1})]),_:1}),wn,s("p",null,[e("Refer to "),s("a",xn,[e("HTMLInputElement"),n(_)]),e(" for more information on these methods and properties. Support will vary based on input type.")]),n(u,null,{default:a(()=>[n(r,null,{default:a(()=>[s("div",Vn,[n(o,{ref_key:"inputRef",ref:x,modelValue:V.value,"onUpdate:modelValue":p[6]||(p[6]=t=>V.value=t),placeholder:"Enter your name"},null,8,["modelValue"])]),s("div",Tn,[n(R,{primary:"",onClick:z},{default:a(()=>[e("Select all text")]),_:1})])]),_:1})]),_:1}),In,n(u,null,{default:a(()=>[n(L)]),_:1})])}}});var Sn=F(En,[["__file","FormInput.html.vue"]]);export{Sn as default};
